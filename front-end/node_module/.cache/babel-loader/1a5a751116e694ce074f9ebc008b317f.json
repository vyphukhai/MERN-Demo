{"ast":null,"code":"import axios from \"axios\";\nimport { api } from \"../urlConfig\";\nimport store from \"../store\";\nconst token = window.localStorage.getItem('token');\nconst axiosIntance = axios.create({\n  baseURL: api,\n  headers: {\n    \"Authorization\": token ? `Bearer ${token}` : ''\n  }\n});\naxiosIntance.interceptors.request.use(req => {\n  const {\n    auth\n  } = store.getState();\n\n  if (auth.token) {\n    req.headers.Authorization = `Bearer ${auth.token}`;\n  }\n\n  return req;\n});\naxiosIntance.interceptors.response.use(res => {\n  return res;\n}, error => {\n  console.log(error.response);\n  const status = error.response ? error.response.status : 500;\n\n  if (status && status === 500) {\n    localStorage.clear();\n    store.dispatch({\n      type: authConstants.LOGOUT_SUCCESS\n    });\n  }\n\n  return Promise.reject(error);\n});\nexport default axiosIntance;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/MERN-Demo/front-end/src/helpers/axios.js"],"names":["axios","api","store","token","window","localStorage","getItem","axiosIntance","create","baseURL","headers","interceptors","request","use","req","auth","getState","Authorization","response","res","error","console","log","status","clear","dispatch","type","authConstants","LOGOUT_SUCCESS","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAGA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AAEA,MAAMC,YAAY,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC9BC,EAAAA,OAAO,EAAER,GADqB;AAE9BS,EAAAA,OAAO,EAAE;AACL,qBAAiBP,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAsB;AADvC;AAFqB,CAAb,CAArB;AAMAI,YAAY,CAACI,YAAb,CAA0BC,OAA1B,CAAkCC,GAAlC,CAAuCC,GAAD,IAAS;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAWb,KAAK,CAACc,QAAN,EAAjB;;AACA,MAAID,IAAI,CAACZ,KAAT,EAAgB;AACdW,IAAAA,GAAG,CAACJ,OAAJ,CAAYO,aAAZ,GAA6B,UAASF,IAAI,CAACZ,KAAM,EAAjD;AACD;;AACD,SAAOW,GAAP;AACD,CANH;AAOEP,YAAY,CAACI,YAAb,CAA0BO,QAA1B,CAAmCL,GAAnC,CACGM,GAAD,IAAS;AACP,SAAOA,GAAP;AACD,CAHH,EAIGC,KAAD,IAAW;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,QAAlB;AACA,QAAMK,MAAM,GAAGH,KAAK,CAACF,QAAN,GAAiBE,KAAK,CAACF,QAAN,CAAeK,MAAhC,GAAyC,GAAxD;;AACA,MAAIA,MAAM,IAAIA,MAAM,KAAK,GAAzB,EAA8B;AAC5BlB,IAAAA,YAAY,CAACmB,KAAb;AACAtB,IAAAA,KAAK,CAACuB,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAEC,aAAa,CAACC;AAAtB,KAAf;AACD;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeV,KAAf,CAAP;AACD,CAZH;AAcF,eAAeb,YAAf","sourcesContent":["import axios from \"axios\";\r\nimport { api } from \"../urlConfig\";\r\nimport store from \"../store\";\r\n\r\n\r\nconst token = window.localStorage.getItem('token');\r\n\r\nconst axiosIntance = axios.create({\r\n    baseURL: api,\r\n    headers: {\r\n        \"Authorization\": token ? `Bearer ${token}`: ''\r\n    }\r\n});\r\naxiosIntance.interceptors.request.use((req) => {\r\n    const { auth } = store.getState();\r\n    if (auth.token) {\r\n      req.headers.Authorization = `Bearer ${auth.token}`;\r\n    }\r\n    return req;\r\n  });\r\n  axiosIntance.interceptors.response.use(\r\n    (res) => {\r\n      return res;\r\n    },\r\n    (error) => {\r\n      console.log(error.response);\r\n      const status = error.response ? error.response.status : 500;\r\n      if (status && status === 500) {\r\n        localStorage.clear();\r\n        store.dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\nexport default axiosIntance;"]},"metadata":{},"sourceType":"module"}