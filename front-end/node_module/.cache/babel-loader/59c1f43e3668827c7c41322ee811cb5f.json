{"ast":null,"code":"import { cartConstants, userConstants } from \"./constants\";\nimport axios from \"../helpers/axios\";\nexport const getAddress = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`/user/getaddress`);\n      dispatch({\n        type: userConstants.GET_USER_ADDRESS_REQUEST\n      });\n\n      if (res.status === 200) {\n        const {\n          userAddress: {\n            address\n          }\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ADDRESS_SUCCESS,\n          payload: {\n            address\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ADDRESS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addAddress = payload => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`/user/address/create`, {\n        payload\n      });\n      dispatch({\n        type: userConstants.ADD_USER_ADDRESS_REQUEST\n      });\n\n      if (res.status === 201) {\n        console.log(res);\n        const {\n          address: {\n            address\n          }\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ADDRESS_SUCCESS,\n          payload: {\n            address\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ADDRESS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const addOrder = payload => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`/addOrder`, payload);\n      dispatch({\n        type: userConstants.ADD_USER_ORDER_REQUEST\n      });\n\n      if (res.status === 201) {\n        console.log(res);\n        const {\n          order\n        } = res.data;\n        dispatch({\n          type: cartConstants.RESET_CART\n        });\n        dispatch({\n          type: userConstants.ADD_USER_ORDER_SUCCESS,\n          payload: {\n            order\n          }\n        }); // const {\n        //   address: { address },\n        // } = res.data;\n        // dispatch({\n        //   type: userConstants.ADD_USER_ADDRESS_SUCCESS,\n        //   payload: { address },\n        // });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.ADD_USER_ORDER_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getOrders = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(`/getOrders`);\n      dispatch({\n        type: userConstants.GET_USER_ORDER_REQUEST\n      });\n\n      if (res.status === 200) {\n        console.log(res);\n        const {\n          orders\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_SUCCESS,\n          payload: {\n            orders\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}; // single order with complete info and delivery location\n\nexport const getOrder = payload => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`/getOrder`, payload);\n      dispatch({\n        type: userConstants.GET_USER_ORDER_DETAILS_REQUEST\n      });\n\n      if (res.status === 200) {\n        console.log(res);\n        const {\n          order\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_DETAILS_SUCCESS,\n          payload: {\n            order\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: userConstants.GET_USER_ORDER_DETAILS_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/MERN-Demo/front-end/src/actions/user.action.js"],"names":["cartConstants","userConstants","axios","getAddress","dispatch","res","post","type","GET_USER_ADDRESS_REQUEST","status","userAddress","address","data","GET_USER_ADDRESS_SUCCESS","payload","error","GET_USER_ADDRESS_FAILURE","console","log","addAddress","ADD_USER_ADDRESS_REQUEST","ADD_USER_ADDRESS_SUCCESS","ADD_USER_ADDRESS_FAILURE","addOrder","ADD_USER_ORDER_REQUEST","order","RESET_CART","ADD_USER_ORDER_SUCCESS","ADD_USER_ORDER_FAILURE","getOrders","get","GET_USER_ORDER_REQUEST","orders","GET_USER_ORDER_SUCCESS","GET_USER_ORDER_FAILURE","getOrder","GET_USER_ORDER_DETAILS_REQUEST","GET_USER_ORDER_DETAILS_SUCCESS","GET_USER_ORDER_DETAILS_FAILURE"],"mappings":"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","sourcesContent":["import { cartConstants, userConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport const getAddress = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(`/user/getaddress`);\r\n      dispatch({ type: userConstants.GET_USER_ADDRESS_REQUEST });\r\n      if (res.status === 200) {\r\n        const {\r\n          userAddress: { address },\r\n        } = res.data;\r\n        dispatch({\r\n          type: userConstants.GET_USER_ADDRESS_SUCCESS,\r\n          payload: { address },\r\n        });\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: userConstants.GET_USER_ADDRESS_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const addAddress = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(`/user/address/create`, { payload });\r\n      dispatch({ type: userConstants.ADD_USER_ADDRESS_REQUEST });\r\n      if (res.status === 201) {\r\n        console.log(res);\r\n        const {\r\n          address: { address },\r\n        } = res.data;\r\n        dispatch({\r\n          type: userConstants.ADD_USER_ADDRESS_SUCCESS,\r\n          payload: { address },\r\n        });\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: userConstants.ADD_USER_ADDRESS_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const addOrder = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(`/addOrder`, payload);\r\n      dispatch({ type: userConstants.ADD_USER_ORDER_REQUEST });\r\n      if (res.status === 201) {\r\n        console.log(res);\r\n        const { order } = res.data;\r\n        dispatch({\r\n          type: cartConstants.RESET_CART,\r\n        });\r\n        dispatch({\r\n          type: userConstants.ADD_USER_ORDER_SUCCESS,\r\n          payload: { order },\r\n        });\r\n        // const {\r\n        //   address: { address },\r\n        // } = res.data;\r\n        // dispatch({\r\n        //   type: userConstants.ADD_USER_ADDRESS_SUCCESS,\r\n        //   payload: { address },\r\n        // });\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: userConstants.ADD_USER_ORDER_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getOrders = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`/getOrders`);\r\n      dispatch({ type: userConstants.GET_USER_ORDER_REQUEST });\r\n      if (res.status === 200) {\r\n        console.log(res);\r\n        const { orders } = res.data;\r\n        dispatch({\r\n          type: userConstants.GET_USER_ORDER_SUCCESS,\r\n          payload: { orders },\r\n        });\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: userConstants.GET_USER_ORDER_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n// single order with complete info and delivery location\r\nexport const getOrder = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(`/getOrder`, payload);\r\n      dispatch({ type: userConstants.GET_USER_ORDER_DETAILS_REQUEST });\r\n      if (res.status === 200) {\r\n        console.log(res);\r\n        const { order } = res.data;\r\n        dispatch({\r\n          type: userConstants.GET_USER_ORDER_DETAILS_SUCCESS,\r\n          payload: { order },\r\n        });\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: userConstants.GET_USER_ORDER_DETAILS_FAILURE,\r\n          payload: { error },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};"]},"metadata":{},"sourceType":"module"}