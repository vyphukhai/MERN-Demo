{"ast":null,"code":"import { categoryConstants } from \"../actions/constants\";\nconst initState = {\n  categories: [],\n  loading: false,\n  error: null\n};\n\nconst buildNewCategories = (parentId, categories, category) => {\n  let myCategories = [];\n\n  if (parentId === undefined) {\n    return [...categories, {\n      _id: category._id,\n      name: category.name,\n      slug: category.slug,\n      type: category.type,\n      children: []\n    }];\n  }\n\n  for (let cat of categories) {\n    if (cat._id === parentId) {\n      myCategories.push({ ...cat,\n        children: cat.children ? buildNewCategories(parentId, [...cat.children, {\n          _id: category._id,\n          name: category.name,\n          slug: category.slug,\n          parentId: category.parentId,\n          children: category.children\n        }], category) : []\n      });\n    } else {\n      myCategories.push({ ...cat,\n        children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\n      });\n    }\n  }\n\n  return myCategories;\n}; // eslint-disable-next-line import/no-anonymous-default-export\n\n\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\n      state = { ...state,\n        categories: action.payload.categories\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n      const category = action.payload.category;\n      const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\n      console.log('updated categories', updatedCategories);\n      state = { ...state,\n        categories: updatedCategories,\n        loading: false\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n      state = { ...initState\n      };\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["C:/Users/DELL/Desktop/MERN-Demo/front-end/src/reducers/category.reducer.js"],"names":["categoryConstants","initState","categories","loading","error","buildNewCategories","parentId","category","myCategories","undefined","_id","name","slug","type","children","cat","push","state","action","GET_ALL_CATEGORIES_SUCCESS","payload","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","updatedCategories","console","log","ADD_NEW_CATEGORY_FAILURE"],"mappings":"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","sourcesContent":["import { categoryConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    categories:[],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nconst buildNewCategories = (parentId,categories, category)=>{\r\n    let myCategories = []\r\n    if(parentId === undefined){\r\n        return [\r\n            ...categories,\r\n            {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                type: category.type,\r\n                children: []\r\n            }\r\n        ];\r\n    }\r\n    for(let cat of categories){\r\n        if(cat._id === parentId){\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children  ? buildNewCategories(parentId,[...cat.children,{\r\n                    _id: category._id,\r\n                    name: category.name,\r\n                    slug: category.slug,\r\n                    parentId: category.parentId,\r\n                    children: category.children,\r\n                }], category) : []\r\n            });\r\n        }else{\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId,cat.children, category) : []\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    return myCategories;\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = initState,action)=>{\r\n    // eslint-disable-next-line default-case\r\n    switch(action.type){\r\n        case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                categories: action.payload.categories\r\n            }\r\n            break;\r\n            case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\r\n                state ={\r\n                    ...state,\r\n                    loading:true\r\n                }\r\n                break;\r\n            case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\r\n                const category = action.payload.category\r\n                const updatedCategories = buildNewCategories(category.parentId,state.categories, category);\r\n                console.log('updated categories',updatedCategories);\r\n                state ={\r\n                    ...state, \r\n                    categories: updatedCategories,\r\n                    loading: false,\r\n                }\r\n                break;\r\n                case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\r\n                state ={\r\n                    ...initState\r\n                }\r\n                break;\r\n    }\r\n    return state;\r\n}"]},"metadata":{},"sourceType":"module"}