[{"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reportWebVitals.js":"2","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\App.js":"3","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\components\\layout\\index.js":"4","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\components\\Header\\index.js":"5","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Home\\index.js":"6","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Signin\\index.js":"7","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Signup\\index.js":"8","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\components\\UI\\Input\\index.js":"9","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\store\\index.js":"10","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reducers\\index.js":"11","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\index.js":"12","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\auth.actions.js":"13","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\constants.js":"14","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reducers\\auth.reducers.js":"15","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\helpers\\axios.js":"16","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\urlConfig.js":"17","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\components\\HOC\\PrivateRoute.js":"18","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\user.action.js":"19","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reducers\\user.reducers.js":"20","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Products\\index.js":"21","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Orders\\index.js":"22","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reducers\\category.reducer.js":"23","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reducers\\product.reducer.js":"24","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reducers\\order.reducer.js":"25","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Category\\index.js":"26","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\category.action.js":"27","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\product.action.js":"28","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\components\\UI\\Modal\\index.js":"29","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\initialData.action.js":"30","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Category\\components\\UpdateCategoriesModal.js":"31","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Category\\components\\AddCategoriesModal.js":"32","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\NewPage\\index.js":"33","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\helpers\\linearCategories.js":"34","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\page.action.js":"35","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reducers\\page.reducer.js":"36","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\order.action.js":"37","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\components\\UI\\Card\\index.js":"38"},{"size":732,"mtime":1633957904857,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"40"},{"size":1387,"mtime":1639584057030,"results":"42","hashOfConfig":"40"},{"size":1249,"mtime":1639379630948,"results":"43","hashOfConfig":"40"},{"size":2493,"mtime":1636334755539,"results":"44","hashOfConfig":"40"},{"size":466,"mtime":1634197987785,"results":"45","hashOfConfig":"40"},{"size":1786,"mtime":1633958252612,"results":"46","hashOfConfig":"40"},{"size":2631,"mtime":1633964542972,"results":"47","hashOfConfig":"40"},{"size":1219,"mtime":1639392441991,"results":"48","hashOfConfig":"40"},{"size":306,"mtime":1639377076073,"results":"49","hashOfConfig":"40"},{"size":550,"mtime":1639388938577,"results":"50","hashOfConfig":"40"},{"size":238,"mtime":1639583852890,"results":"51","hashOfConfig":"40"},{"size":1781,"mtime":1634196047718,"results":"52","hashOfConfig":"40"},{"size":2585,"mtime":1639594067632,"results":"53","hashOfConfig":"40"},{"size":1279,"mtime":1634196243935,"results":"54","hashOfConfig":"40"},{"size":926,"mtime":1639387541826,"results":"55","hashOfConfig":"40"},{"size":154,"mtime":1638974141573,"results":"56","hashOfConfig":"40"},{"size":434,"mtime":1633955969786,"results":"57","hashOfConfig":"40"},{"size":801,"mtime":1633964267299,"results":"58","hashOfConfig":"40"},{"size":819,"mtime":1633964025078,"results":"59","hashOfConfig":"40"},{"size":7439,"mtime":1639596784975,"results":"60","hashOfConfig":"40"},{"size":4323,"mtime":1639586158382,"results":"61","hashOfConfig":"40"},{"size":4124,"mtime":1639391207462,"results":"62","hashOfConfig":"40"},{"size":512,"mtime":1638969882161,"results":"63","hashOfConfig":"40"},{"size":462,"mtime":1639583636852,"results":"64","hashOfConfig":"40"},{"size":9010,"mtime":1639484236939,"results":"65","hashOfConfig":"40"},{"size":2454,"mtime":1639378188670,"results":"66","hashOfConfig":"40"},{"size":1994,"mtime":1639596044459,"results":"67","hashOfConfig":"40"},{"size":848,"mtime":1639390741892,"results":"68","hashOfConfig":"40"},{"size":757,"mtime":1639586220628,"results":"69","hashOfConfig":"40"},{"size":4742,"mtime":1639391631180,"results":"70","hashOfConfig":"40"},{"size":1545,"mtime":1639391000564,"results":"71","hashOfConfig":"40"},{"size":6322,"mtime":1639392486184,"results":"72","hashOfConfig":"40"},{"size":435,"mtime":1639380587671,"results":"73","hashOfConfig":"40"},{"size":780,"mtime":1639387959324,"results":"74","hashOfConfig":"40"},{"size":882,"mtime":1639389200828,"results":"75","hashOfConfig":"40"},{"size":1405,"mtime":1639585936539,"results":"76","hashOfConfig":"40"},{"size":487,"mtime":1639586199937,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"10rqdsl",{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\index.js",[],["164","165"],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\App.js",["166"],"import \"./App.css\";\nimport { Route, Switch} from 'react-router-dom';\nimport Home from \"./containers/Home\";\nimport Signin from \"./containers/Signin\";\nimport Signup from \"./containers/Signup\";\nimport PrivateRoute from './components/HOC/PrivateRoute';\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isUserLoggedIn,getInitialData} from \"./actions\";\nimport Products from \"./containers/Products\";\nimport Orders from \"./containers/Orders\";\nimport Category from \"./containers/Category\";\nimport NewPage from \"./containers/NewPage\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const auth = useSelector(state=>state.auth)\n  useEffect(() => {\n    if(!auth.authenticate){\n      dispatch(isUserLoggedIn());\n    }\n    if(auth.authenticate){\n      dispatch(getInitialData());\n    }\n\n    \n  }, [auth.authenticate])\n  return (\n    <div className=\"App\">\n        <Switch>\n          <PrivateRoute path=\"/\" exact component={Home}/>\n          <PrivateRoute path=\"/page\"  component={NewPage}/>\n          <PrivateRoute path=\"/category\" component={Category}/>\n          <PrivateRoute path=\"/products\"  component={Products}/>\n          <PrivateRoute path=\"/orders\" component={Orders}/>\n\n\n          <Route path=\"/signin\" component={Signin}/>\n          <Route path=\"/signup\" component={Signup}/>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\components\\layout\\index.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\components\\Header\\index.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Home\\index.js",["167","168","169","170","171"],"import React from 'react'\r\nimport {  Jumbotron,Container,Row,Col } from 'react-bootstrap'\r\nimport Layout from '../../components/layout';\r\nimport './style.css';\r\nimport { NavLink} from 'react-router-dom'\r\n\r\n\r\nexport default function Home() {\r\n\r\n\r\n    return (\r\n       <Layout sidebar>\r\n           \r\n           {/* <Jumbotron style={{margin: '6rem'}} className=\"text-center\">\r\n               <h1>Wellcome</h1>\r\n           </Jumbotron> */}\r\n       </Layout>\r\n    )\r\n}\r\n","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Signin\\index.js",["172","173","174"],"import React, { useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport Layout from \"../../components/layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport { login } from \"../../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\n/**\r\n * @author\r\n * @function Signin\r\n **/\r\nconst Signin = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n\r\n  const userLogin = (e) => {\r\n    e.preventDefault();\r\n    const user = {\r\n      email,\r\n      password,\r\n    };\r\n    dispatch(login(user));\r\n  };\r\n\r\n  if(auth.authenticate){\r\n    return <Redirect to={`/`}/>\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Row style={{ marginTop: \"50px\" }}>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Form onSubmit={userLogin}>\r\n              <Input\r\n                label=\"Email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                type=\"text\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n\r\n              <Input\r\n                label=\"Password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Signup\\index.js",["175","176"],"import React, { useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport Layout from \"../../components/layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signup } from \"../../actions\";\r\n\r\nconst Signup = (props) => {\r\n\r\n  \r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const auth =useSelector(state=>state.auth);\r\n  const user = useSelector(state=>state.user);\r\n  const dispatch = useDispatch('');\r\n\r\n  const userSignup = (e)=>{\r\n    e.preventDefault();\r\n    const user = {\r\n      firstName, lastName, email, password\r\n    }\r\n    dispatch(signup(user))\r\n  }\r\n  if(auth.authenticate){\r\n    return <Redirect to={`/`}/>\r\n  }\r\n  if(user.loading){\r\n    return <p>Loading...!</p>\r\n  }\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        {user.message}\r\n        <Row style={{ marginTop: \"50px\" }}>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Form onSubmit={userSignup}>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Input\r\n                    label=\"First Name\"\r\n                    placeholder=\"First Name\"\r\n                    value={firstName}\r\n                    type=\"text\"\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Input\r\n                    label=\"Last Name\"\r\n                    placeholder=\"Last Name\"\r\n                    value={lastName}\r\n                    type=\"text\"\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Input\r\n                label=\"Email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                type=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n\r\n              <Input\r\n                label=\"Password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\nexport default Signup;","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\components\\UI\\Input\\index.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\store\\index.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reducers\\index.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\index.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\auth.actions.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\constants.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reducers\\auth.reducers.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\helpers\\axios.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\urlConfig.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\components\\HOC\\PrivateRoute.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\user.action.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reducers\\user.reducers.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Products\\index.js",["177"],"import React, { useState } from \"react\";\r\nimport Layout from \"../../components/layout\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addProduct,deleteProductById } from \"../../actions\";\r\nimport './style.css';\r\nimport { generatePublicUrl } from \"../../urlConfig\";\r\n\r\n\r\nexport default function Products(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [productPictures, setProductPictures] = useState([]);\r\n  const [productDetailModal, setProductDetailModal] = useState(false)\r\n  const [productDetails, setProductDetails] = useState(null);\r\n  const category = useSelector((state) => state.category);\r\n  const [show, setShow] = useState(false);\r\n  const product = useSelector((state) => state.product);\r\n  const dispatch = useDispatch();\r\n\r\n  const submitProduct = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", name);\r\n    form.append(\"quantity\", quantity);\r\n    form.append(\"price\", price);\r\n    form.append(\"description\", description);\r\n    form.append(\"category\", categoryId);\r\n    for (let pic of productPictures) {\r\n      form.append(\"productPicture\", pic);\r\n    }\r\n\r\n    dispatch(addProduct(form));\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  const handleClose = ()=> setShow(false)\r\n\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n  const handleProductPictures = (e) => {\r\n    setProductPictures([...productPictures, e.target.files[0]]);\r\n  };\r\n  const renderProducts = () => {\r\n    return (\r\n      <Table style={{ fontSize: 20 }} responsive=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            \r\n            <th>Category</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {product.products.length > 0\r\n            ? product.products.map((product) => (\r\n                <tr onClick={()=> showProductDetailsModal(product)} key={product._id}>\r\n                  <th>1</th>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.quantity}</td>\r\n                  <td>{product.category.name}</td>\r\n                  <td>\r\n                  <button onClick={() => showProductDetailsModal(product)}>\r\n                      info\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        const payload = {\r\n                          productId: product._id,\r\n                        };\r\n                        dispatch(deleteProductById(payload));\r\n                      }}\r\n                    >\r\n                      del\r\n                    </button>\r\n                    </td>\r\n                </tr>\r\n              ))\r\n            : null}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  const renderAddProductModal = () => {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        onSubmit={submitProduct}\r\n        modalTitle={\"Add New Product\"}\r\n      >\r\n        <Input\r\n          label=\"Name\"\r\n          value={name}\r\n          placeholder={`Product Name`}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Quantity\"\r\n          value={quantity}\r\n          placeholder={`Quantity`}\r\n          onChange={(e) => setQuantity(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Price\"\r\n          value={price}\r\n          placeholder={`Price`}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Description\"\r\n          value={description}\r\n          placeholder={`Description`}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <select\r\n          className=\"form-control\"\r\n          value={categoryId}\r\n          onChange={(e) => setCategoryId(e.target.value)}\r\n        >\r\n          <option>select category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {productPictures.length > 0\r\n          ? productPictures.map((pic, index) => (\r\n              <div key={index}>{pic.name}</div>\r\n            ))\r\n          : null}\r\n        <input\r\n          type=\"file\"\r\n          name=\"productPicture\"\r\n          onChange={handleProductPictures}\r\n        />\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const handleCloseProductDetailModal = ()=>{\r\n    setProductDetailModal(false);\r\n  }\r\n  const showProductDetailsModal = (product) =>{\r\n    setProductDetails(product)\r\n    setProductDetailModal(true);\r\n  }\r\n  const renderShowProductDetailModal = ()=>{\r\n\r\n    if(!productDetails){\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        show= {productDetailModal }\r\n        handleClose={handleCloseProductDetailModal}\r\n        modalTitle={'Product Details'}\r\n        size = \"lg\"\r\n      >\r\n        <Row>\r\n          <Col md = \"6\">\r\n            <label className=\"key\">Name</label>\r\n            <p className=\"value\">{productDetails.name}</p>\r\n          </Col>\r\n          <Col md = \"6\">\r\n            <label className=\"key\">Price</label>\r\n            <p className=\"value\">{productDetails.price}</p>\r\n          </Col>\r\n          <Col md = \"6\">\r\n            <label className=\"key\">Quantity</label>\r\n            <p className=\"value\">{productDetails.quantity}</p>\r\n          </Col>\r\n          <Col md = \"6\">\r\n            <label className=\"key\">Category</label>\r\n            <p className=\"value\">{productDetails.category.name}</p>\r\n          </Col>\r\n          \r\n        </Row>\r\n        <Row>\r\n        <Col md = \"12\">\r\n            <label className=\"key\">Description</label>\r\n            <p className=\"value\">{productDetails.description}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col >\r\n            <label className=\"key\">Product Pictures</label>\r\n            <div style={{display: 'flex'}}>\r\n            {productDetails.productPictures.map(picture =>\r\n              <div className=\"productImgContainer\">\r\n                <img src ={generatePublicUrl(picture.img)}/>\r\n              </div>\r\n          )}\r\n            </div>\r\n            \r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Products</h3>\r\n              <button onClick={handleShow}>Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderProducts()}</Col>\r\n        </Row>\r\n      </Container>\r\n      {renderAddProductModal()}\r\n      {renderShowProductDetailModal()}\r\n    </Layout>\r\n  );\r\n}\r\n","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Orders\\index.js",["178"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCustomerOrders, updateOrder } from \"../../actions\";\r\nimport Layout from \"../../components/layout\";\r\nimport Card from \"../../components/UI/Card\";\r\n\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function Orders\r\n **/\r\n\r\nconst Orders = (props) => {\r\n  const order = useSelector((state) => state.order);\r\n  const [type, setType] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const onOrderUpdate = (orderId) => {\r\n    const payload = {\r\n      orderId,\r\n      type,\r\n    };\r\n    dispatch(updateOrder(payload));\r\n    \r\n  };\r\n  useEffect(()=>{\r\n    dispatch(getCustomerOrders());\r\n  },[])\r\n  const formatDate = (date) => {\r\n    if (date) {\r\n      const d = new Date(date);\r\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      {order.orders ? order.orders.map((orderItem, index) => (\r\n        <Card\r\n          style={{\r\n            margin: \"10px 0\",\r\n          }}\r\n          key={index}\r\n          headerLeft={orderItem._id}\r\n        > \r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              padding: \"50px 50px\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div>\r\n              <div className=\"title\">Items</div>\r\n              {orderItem.items.map((item, index) => (\r\n                <div className=\"value\" key={index}>\r\n                  {item.productId.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div>\r\n              <span className=\"title\">Total Price</span>\r\n              <br />\r\n              <span className=\"value\">{orderItem.totalAmount}</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"title\">Payment Type</span> <br />\r\n              <span className=\"value\">{orderItem.paymentType}</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"title\">Payment Status</span> <br />\r\n              <span className=\"value\">{orderItem.paymentStatus}</span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              boxSizing: \"border-box\",\r\n              padding: \"100px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div className=\"orderTrack\">\r\n              {orderItem.orderStatus.map((status) => (\r\n                <div\r\n                  className={`orderStatus ${\r\n                    status.isCompleted ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <div\r\n                    className={`point ${status.isCompleted ? \"active\" : \"\"}`}\r\n                  ></div>\r\n                  <div className=\"orderInfo\">\r\n                    <div className=\"status\">{status.type}</div>\r\n                    <div className=\"date\">{formatDate(status.date)}</div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* select input to apply order action */}\r\n            <div\r\n              style={{\r\n                padding: \"0 50px\",\r\n                boxSizing: \"border-box\",\r\n              }}\r\n            >\r\n              <select onChange={(e) => setType(e.target.value)}>\r\n                <option value={\"\"}>select status</option>\r\n                {orderItem.orderStatus.map((status) => {\r\n                  return (\r\n                    <>\r\n                      {!status.isCompleted ? (\r\n                        <option key={status.type} value={status.type}>\r\n                          {status.type}\r\n                        </option>\r\n                      ) : null}\r\n                    </>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            {/* button to confirm action */}\r\n\r\n            <div\r\n              style={{\r\n                padding: \"0 50px\",\r\n                boxSizing: \"border-box\",\r\n              }}\r\n            >\r\n              <button onClick={() => onOrderUpdate(orderItem._id)}>\r\n                confirm\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      )): null}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reducers\\category.reducer.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reducers\\product.reducer.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reducers\\order.reducer.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Category\\index.js",["179"],"import React, { useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addCategory,\r\n  getAllCategory,\r\n  updateCategories,\r\n  deleteCategories as deleteCategoriesAction,\r\n} from \"../../actions\";\r\nimport Layout from \"../../components/layout\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\nimport {\r\n  IoIosCheckboxOutline,\r\n  IoIosCheckbox,\r\n  IoIosArrowForward,\r\n  IoIosArrowDown,\r\n  IoIosAdd,\r\n  IoIosTrash,\r\n  IoIosCloudUpload,\r\n} from \"react-icons/io\";\r\nimport UpdateCategoriesModal from \"./components/UpdateCategoriesModal\";\r\nimport AddCategoryModal from \"./components/AddCategoriesModal\";\r\nimport \"./style.css\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Category = (props) => {\r\n  const category = useSelector((state) => state.category);\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(\"\");\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [checkedArray, setCheckedArray] = useState([]);\r\n  const [expandedArray, setExpandedArray] = useState([]);\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    if(!category.loading){\r\n      setShow(false);\r\n    }\r\n  },[category.loading])\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n    if(categoryName===\"\"){\r\n      alert(\"Name is required\");\r\n      setShow(false);\r\n      return;\r\n    }\r\n    form.append(\"name\", categoryName);\r\n    form.append(\"parentId\", parentCategoryId);\r\n    form.append(\"categoryImage\", categoryImage);\r\n    dispatch(addCategory(form));\r\n    setCategoryName(\"\");\r\n    setParentCategoryId(\"\");\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category of categories) {\r\n      myCategories.push({\r\n        label: category.name,\r\n        value: category._id,\r\n        children:\r\n          category.children.length > 0 && renderCategories(category.children),\r\n      });\r\n    }\r\n    return myCategories;\r\n  };\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({\r\n        value: category._id,\r\n        name: category.name,\r\n        parentId: category.parentId,\r\n        type: category.type\r\n      });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n  const handleCategoryImage = (e) => {\r\n    setCategoryImage(e.target.files[0]);\r\n  };\r\n  const updateCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setUpdateCategoryModal(true);\r\n  };\r\n\r\n  const updateCheckedAndExpandedCategories = () => {\r\n    const categories = createCategoryList(category.categories);\r\n    const checkedArray = [];\r\n    const expandedArray = [];\r\n    checked.length > 0 &&\r\n      checked.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, _index) => categoryId === category.value\r\n        );\r\n        category && checkedArray.push(category);\r\n      });\r\n    expanded.length > 0 &&\r\n      expanded.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, _index) => categoryId === category.value\r\n        );\r\n        category && expandedArray.push(category);\r\n      });\r\n    setCheckedArray(checkedArray);\r\n    setExpandedArray(expandedArray);\r\n    console.log({ checked, expanded, categories, checkedArray, expandedArray });\r\n  };\r\n\r\n  const handleCategoryInput = (key, value, index, type) => {\r\n    if (type === \"checked\") {\r\n      const updatedCheckedArray = checkedArray.map((item, _index) =>\r\n        index === _index ? { ...item, [key]: value } : item\r\n      );\r\n      setCheckedArray(updatedCheckedArray);\r\n    } else if (type === \"expanded\") {\r\n      const updatedExpandedArray = expandedArray.map((item, _index) =>\r\n        index === _index ? { ...item, [key]: value } : item\r\n      );\r\n      setExpandedArray(updatedExpandedArray);\r\n    }\r\n  };\r\n  const updateCategoriesForm = () => {\r\n    const form = new FormData();\r\n    // if(name===\"\"){\r\n    //   alert('Category name is required')\r\n    //   return;\r\n    // }\r\n    expandedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\r\n      form.append(\"type\", item.type);\r\n    });\r\n    checkedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\r\n      form.append(\"type\", item.type);\r\n    });\r\n    dispatch(updateCategories(form));\r\n    setUpdateCategoryModal(false);\r\n  };\r\n\r\n  const deleteCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setDeleteCategoryModal(true);\r\n  };\r\n\r\n  const deleteCategories = () => {\r\n    const checkedIdsArray = checkedArray.map((item, index) => ({\r\n      _id: item.value,\r\n    }));\r\n    const expandedIdsArray = expandedArray.map((item, index) => ({\r\n      _id: item.value,\r\n    }));\r\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\r\n    if (checkedIdsArray.length > 0) {\r\n      dispatch(deleteCategoriesAction(checkedIdsArray)).then((result) => {\r\n        if (result) {\r\n          dispatch(getAllCategory());\r\n          setDeleteCategoryModal(false);\r\n        }\r\n      });\r\n    }\r\n    setDeleteCategoryModal(false);\r\n  };\r\n\r\n  const renderDeleteCategoryModal = () => {\r\n    return (\r\n      <Modal\r\n        modalTitle=\"Confirm\"\r\n        show={deleteCategoryModal}\r\n        handleClose={() => setDeleteCategoryModal(false)}\r\n        buttons={[\r\n          {\r\n            label: \"No\",\r\n            color: \"primary\",\r\n            onClick: () => {\r\n              alert(\"no\");\r\n            },\r\n          },\r\n          {\r\n            label: \"Yes\",\r\n            color: \"danger\",\r\n            onClick: deleteCategories,\r\n          },\r\n        ]}\r\n      >\r\n        <h5>Checked</h5>\r\n        {checkedArray.map((item, index) => (\r\n          <span key={index}>{item.name}</span>\r\n        ))}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const categoryList = createCategoryList(category.categories);\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Category</h3>\r\n              <div className=\"=actionBtnContainer\">\r\n                <span>Actions: </span>\r\n                <button onClick={handleShow}><IoIosAdd/><span>Add</span></button>\r\n                <button onClick={deleteCategory}><IoIosTrash/><span>Delete</span></button>\r\n                <button onClick={updateCategory}><IoIosCloudUpload/><span>Edit</span></button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            {/* <ul>{renderCategories(category.categories)}</ul> */}\r\n            <CheckboxTree\r\n              nodes={renderCategories(category.categories)}\r\n              checked={checked}\r\n              expanded={expanded}\r\n              onCheck={(checked) => setChecked(checked)}\r\n              onExpand={(expanded) => setExpanded(expanded)}\r\n              icons={{\r\n                check: <IoIosCheckbox />,\r\n                uncheck: <IoIosCheckboxOutline />,\r\n                halfCheck: <IoIosCheckboxOutline />,\r\n                expandClose: <IoIosArrowForward />,\r\n                expandOpen: <IoIosArrowDown />,\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <AddCategoryModal\r\n        show={show}\r\n        handleClose={()=>setShow(false)}\r\n        onSubmit={handleClose}\r\n        modalTitle={\"Add New Categories\"}\r\n        categoryName={categoryName}\r\n        setCategoryName={setCategoryName}\r\n        parentCategoryId={parentCategoryId}\r\n        setParentCategoryId={setParentCategoryId}\r\n        categoryList={categoryList}\r\n        handleCategoryImage={handleCategoryImage}\r\n      />\r\n      <UpdateCategoriesModal\r\n        show={updateCategoryModal}\r\n        handleClose={()=> setUpdateCategoryModal(false)}\r\n        onSubmit={updateCategoriesForm}\r\n        modalTitle={\"Update Categories\"}\r\n        size=\"lg\"\r\n        expandedArray={expandedArray}\r\n        checkedArray={checkedArray}\r\n        handleCategoryInput={handleCategoryInput}\r\n        categoryList={categoryList}\r\n      />\r\n      {renderDeleteCategoryModal()}\r\n    </Layout>\r\n  );\r\n};\r\nexport default Category;\r\n","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\category.action.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\product.action.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\components\\UI\\Modal\\index.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\initialData.action.js",["180"],"import { categoryConstants, initialDataConstants, productConstants,orderConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport const getInitialData = () => {\r\n  return async (dispatch) => {\r\n    const res = await axios.post(`/initialData`);\r\n    if (res.status === 200) {\r\n      const { categories, products, orders  } = res.data;\r\n      dispatch({\r\n        type: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\r\n        payload: { categories },\r\n      });\r\n      dispatch({\r\n        type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\r\n        payload: { products },\r\n      });\r\n      dispatch({\r\n        type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\r\n        payload: { orders },\r\n      });\r\n    }\r\n    console.log(res)\r\n  };\r\n};\r\n","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Category\\components\\UpdateCategoriesModal.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\Category\\components\\AddCategoriesModal.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\containers\\NewPage\\index.js",["181"],"import React, { useEffect, useState } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createPage } from '../../actions/page.action';\r\nimport Layout from '../../components/layout'\r\nimport Input from '../../components/UI/Input';\r\nimport Modal from '../../components/UI/Modal'\r\nimport linearCategories from '../../helpers/linearCategories';\r\n\r\nexport default function NewPage() {\r\n\r\n    const [createModal, setCreateModal] =useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const category = useSelector(state=>state.category);\r\n    const [categories, setCategories] = useState([]);\r\n    const [categoryId, setCategoryId] = useState('');\r\n    const [type, setType]= useState('')\r\n    const [desc,setDesc] = useState('');\r\n    const [banners, setBanners] = useState([]);\r\n    const [products, setProducts] =useState([]);\r\n    const dispatch = useDispatch();\r\n    const page = useSelector(state => state.page)\r\n    useEffect(()=>{\r\n        setCategories(linearCategories(category.categories));\r\n    },[category]);\r\n\r\n    useEffect(()=>{\r\n        console.log(page);\r\n        if(!page.loading){\r\n            setCreateModal(false);\r\n            setTitle('');\r\n            setCategoryId('');\r\n            setDesc('');\r\n            setProducts([]);\r\n            setBanners([]);\r\n        }\r\n    },[page])\r\n    const onCategoryChange = (e)=>{\r\n        const category = categories.find(category=>category.value === e.target.value)\r\n        setCategoryId(e.target.value);\r\n        setType(category.type);\r\n    }\r\n    const handleBannerImages = (e) =>{\r\n        console.log(e);\r\n        setBanners([...banners, e.target.files[0]]);\r\n    }\r\n    const handleProductImages = (e)=>{\r\n        console.log(e);\r\n        setProducts([...products, e.target.files[0]]);\r\n    }\r\n    const submitPageForm = (e) =>{\r\n        // e.target.preventDefault();\r\n        if(title === \"\"){\r\n            alert('Title id required');\r\n            setCreateModal(false);\r\n            return;\r\n        }\r\n        const form = new FormData();\r\n        form.append('title', title);\r\n        form.append('description',desc);\r\n        form.append('category', categoryId);\r\n        // form.append('type',type);\r\n        banners.forEach((banner,index)=>{\r\n            form.append('banners',banner);\r\n\r\n        })\r\n        products.forEach((product,index)=>{\r\n            form.append('products',product);\r\n            \r\n        })\r\n        dispatch(createPage(form));\r\n    }\r\n\r\n    const renderCreatePageModal =()=>{\r\n        return (\r\n            <Modal\r\n                show={createModal}\r\n                modalTile ={'Create New Page'}\r\n                handleClose={() => setCreateModal(false)}\r\n                onSubmit={submitPageForm}\r\n            >\r\n                <Container>\r\n                <Row>\r\n                    <Col>\r\n                    \r\n                    {/* <select\r\n                        className='form-control from-control-sm'\r\n                        value={categoryId}\r\n                        onChange={onCategoryChange}\r\n                    >\r\n                        <option value=\"\">\r\n                            select category\r\n                        </option>\r\n                        {\r\n                            categories.map(cat=>\r\n                                <option key={cat._id} value={cat._id}>{cat.name}</option>)\r\n                        }\r\n                    </select> */}\r\n                    <Input\r\n                        type='select'\r\n                        value={categoryId}\r\n                        onChange={onCategoryChange}\r\n                        options={categories}\r\n                        placeholder={'Select Category'}\r\n                    />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                    <Input\r\n                        value={title}\r\n                        onChange={(e)=>setTitle(e.target.value)}\r\n                        placeholder={'Page Title'}\r\n                        className='form-control-sm '\r\n                    />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                    <Input\r\n                        value={desc}\r\n                        onChange={(e)=>setDesc(e.target.value)}\r\n                        placeholder={'Page Desc'}\r\n                        className='form-control-sm '\r\n                    />\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                        banners.length>0 ?\r\n                        banners.map((banner,index)=>\r\n                            <Row key={index}>\r\n                                <Col>{banner.name}</Col>\r\n                            </Row>\r\n                        ):null\r\n                    }\r\n                <Row>\r\n                    \r\n                    <Col>\r\n                        <input\r\n                        className='form-control'\r\n                            type=\"file\"\r\n                            name=\"banners\"\r\n                            onChange={handleBannerImages}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                        products.length>0 ?\r\n                        products.map((product,index)=>\r\n                            <Row key={index}>\r\n                                <Col>{product.name}</Col>\r\n                            </Row>\r\n                        ):null\r\n                    }\r\n                <Row>\r\n                \r\n                    <Col>\r\n                        <input\r\n                        className='form-control '\r\n                            type=\"file\"\r\n                            name=\"products\"\r\n                            onChange={handleProductImages}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n                \r\n\r\n            </Modal>\r\n        )\r\n    }\r\n    return (\r\n        <Layout sidebar>\r\n            {\r\n                page.loading?<p>Creating Page...please wait</p>: <>{renderCreatePageModal()}\r\n                <button onClick={()=>setCreateModal(true)}>Create Page</button></>\r\n            }\r\n            \r\n        </Layout>\r\n    )\r\n}\r\n","C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\helpers\\linearCategories.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\page.action.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\reducers\\page.reducer.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\actions\\order.action.js",[],"C:\\Users\\DELL\\Desktop\\MERN-Demo\\admin-app\\src\\components\\UI\\Card\\index.js",[],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":27,"column":6,"nodeType":"188","endLine":27,"endColumn":25,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":2,"column":11,"nodeType":"192","messageId":"193","endLine":2,"endColumn":20},{"ruleId":"190","severity":1,"message":"194","line":2,"column":21,"nodeType":"192","messageId":"193","endLine":2,"endColumn":30},{"ruleId":"190","severity":1,"message":"195","line":2,"column":31,"nodeType":"192","messageId":"193","endLine":2,"endColumn":34},{"ruleId":"190","severity":1,"message":"196","line":2,"column":35,"nodeType":"192","messageId":"193","endLine":2,"endColumn":38},{"ruleId":"190","severity":1,"message":"197","line":5,"column":10,"nodeType":"192","messageId":"193","endLine":5,"endColumn":17},{"ruleId":"190","severity":1,"message":"198","line":8,"column":10,"nodeType":"192","messageId":"193","endLine":8,"endColumn":19},{"ruleId":"190","severity":1,"message":"199","line":18,"column":10,"nodeType":"192","messageId":"193","endLine":18,"endColumn":15},{"ruleId":"190","severity":1,"message":"200","line":18,"column":17,"nodeType":"192","messageId":"193","endLine":18,"endColumn":25},{"ruleId":"190","severity":1,"message":"199","line":16,"column":10,"nodeType":"192","messageId":"193","endLine":16,"endColumn":15},{"ruleId":"190","severity":1,"message":"200","line":16,"column":17,"nodeType":"192","messageId":"193","endLine":16,"endColumn":25},{"ruleId":"201","severity":1,"message":"202","line":210,"column":17,"nodeType":"203","endLine":210,"endColumn":61},{"ruleId":"186","severity":1,"message":"187","line":28,"column":5,"nodeType":"188","endLine":28,"endColumn":7,"suggestions":"204"},{"ruleId":"190","severity":1,"message":"205","line":169,"column":11,"nodeType":"192","messageId":"193","endLine":169,"endColumn":19},{"ruleId":"190","severity":1,"message":"206","line":1,"column":29,"nodeType":"192","messageId":"193","endLine":1,"endColumn":49},{"ruleId":"190","severity":1,"message":"207","line":17,"column":12,"nodeType":"192","messageId":"193","endLine":17,"endColumn":16},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["210"],"no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'NavLink' is defined but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["211"],"'idsArray' is assigned a value but never used.","'initialDataConstants' is defined but never used.","'type' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"216","text":"217"},"Update the dependencies array to be: [dispatch]",{"range":"218","text":"219"},[840,859],"[auth.authenticate, dispatch]",[708,710],"[dispatch]"]