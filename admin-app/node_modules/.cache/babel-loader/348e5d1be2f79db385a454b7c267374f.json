{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\MERN-Demo\\\\admin-app\\\\src\\\\containers\\\\Category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Col, Container, Modal, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCategory } from \"../../actions\";\nimport Layout from \"../../components/layout\";\nimport Input from \"../../components/UI/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const [categoryName, setCategoryName] = useState(\"\");\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\n  const [categoryImage, setCategoryImage] = useState(\"\");\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append(\"name\", categoryName);\n    form.append(\"parentId\", parentCategoryId);\n    form.append(\"categoryImage\", categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName('');\n    setParentCategoryId; // const cat = {\n    //     categoryName,\n    //     parentCategoryId,\n    //     categoryImage\n    // };\n\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [category.name, category.children.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: renderCategories(category.children)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this) : null]\n      }, category.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this));\n    }\n\n    return myCategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShow,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: renderCategories(category.categories)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add New Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: categoryName,\n          placeholder: `Category Name`,\n          onChange: e => setCategoryName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          value: parentCategoryId,\n          onChange: e => setParentCategoryId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"select category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.name\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"categoryImage\",\n          onChange: handleCategoryImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"3iC5sl0ClNdDdeYHMC1rGfvW4Es=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/MERN-Demo/admin-app/src/containers/Category/index.js"],"names":["React","useState","Button","Col","Container","Modal","Row","useDispatch","useSelector","addCategory","Layout","Input","Category","props","category","state","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","dispatch","show","setShow","handleClose","form","FormData","append","handleShow","renderCategories","categories","myCategories","push","name","children","length","createCategoryList","options","value","_id","handleCategoryImage","e","target","files","display","justifyContent","map","option"],"mappings":"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","sourcesContent":["import React, {  useState } from \"react\";\r\nimport { Button, Col, Container, Modal, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCategory} from \"../../actions\";\r\nimport Layout from \"../../components/layout\";\r\nimport Input from \"../../components/UI/Input\";\r\n\r\nconst Category =(props)=> {\r\n  const category = useSelector((state) => state.category);\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", categoryName);\r\n    form.append(\"parentId\", parentCategoryId);\r\n    form.append(\"categoryImage\", categoryImage);\r\n    dispatch(addCategory(form));\r\n    setCategoryName('');\r\n    setParentCategoryId\r\n    // const cat = {\r\n    //     categoryName,\r\n    //     parentCategoryId,\r\n    //     categoryImage\r\n    // };\r\n\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category of categories) {\r\n      myCategories.push(\r\n        <li key={category.name}>\r\n          {category.name}\r\n          {category.children.length > 0 ? (\r\n            <ul>{renderCategories(category.children)}</ul>\r\n          ) : null}\r\n        </li>\r\n      );\r\n    }\r\n    return myCategories;\r\n  };\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n  const handleCategoryImage = (e) => {\r\n    setCategoryImage(e.target.files[0]);\r\n  };\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Category</h3>\r\n              <button onClick={handleShow}>Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            <ul>{renderCategories(category.categories)}</ul>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add New Category</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Input\r\n            value={categoryName}\r\n            placeholder={`Category Name`}\r\n            onChange={(e) => setCategoryName(e.target.value)}\r\n          />\r\n\r\n          <select\r\n            className=\"form-control\"\r\n            value={parentCategoryId}\r\n            onChange={(e) => setParentCategoryId(e.target.value)}\r\n          >\r\n            <option>select category</option>\r\n            {createCategoryList(category.categories).map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            type=\"file\"\r\n            name=\"categoryImage\"\r\n            onChange={handleCategoryImage}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Layout>\r\n  );\r\n}\r\nexport default Category;"]},"metadata":{},"sourceType":"module"}