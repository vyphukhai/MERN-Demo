{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\MERN-Demo\\\\admin-app\\\\src\\\\containers\\\\Category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCategory } from \"../../actions\";\nimport Layout from \"../../components/layout\";\nimport Input from \"../../components/UI/Input\";\nimport Modal from \"../../components/UI/Modal\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown } from \"react-icons/io\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const [categoryName, setCategoryName] = useState(\"\");\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\n  const [categoryImage, setCategoryImage] = useState(\"\");\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append(\"name\", categoryName);\n    form.append(\"parentId\", parentCategoryId);\n    form.append(\"categoryImage\", categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName(\"\");\n    setParentCategoryId(\"\"); // const cat = {\n    //     categoryName,\n    //     parentCategoryId,\n    //     categoryImage\n    // };\n\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return myCategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    setUpdateCategoryModal(true);\n    const categories = createCategoryList(category.categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && checkedArray.push(category);\n    });\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && expandedArray.push(category);\n    });\n    console.log({\n      checked,\n      expanded,\n      categories,\n      checkedArray,\n      expandedArray\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShow,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n            nodes: renderCategories(category.categories),\n            checked: checked,\n            expanded: expanded,\n            onCheck: checked => setChecked(checked),\n            onExpand: expanded => setExpanded(expanded),\n            icons: {\n              check: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 24\n              }, this),\n              uncheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 26\n              }, this),\n              halfCheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 28\n              }, this),\n              expandClose: /*#__PURE__*/_jsxDEV(IoIosArrowForward, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 30\n              }, this),\n              expandOpen: /*#__PURE__*/_jsxDEV(IoIosArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: updateCategory,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      handleClose: handleClose,\n      modalTitle: \"Add New Category\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: categoryName,\n        placeholder: `Category Name`,\n        onChange: e => setCategoryName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: parentCategoryId,\n        onChange: e => setParentCategoryId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"select category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.name\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"categoryImage\",\n        onChange: handleCategoryImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: updateCategoryModal,\n      handleClose: () => setUpdateCategoryModal(false),\n      modalTitle: \"Update Categories\",\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Expanded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), expandedArray.len, /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: categoryName,\n            placeholder: `Category Name`,\n            onChange: e => setCategoryName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: parentCategoryId,\n            onChange: e => setParentCategoryId(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"select category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"store\",\n              children: \"Store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"product\",\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"page\",\n              children: \"Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"5I6FCpoBMj+sPZsfNr542dze9Ps=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/MERN-Demo/admin-app/src/containers/Category/index.js"],"names":["React","useState","Button","Col","Container","Row","useDispatch","useSelector","addCategory","Layout","Input","Modal","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","Category","props","category","state","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","dispatch","show","setShow","handleClose","form","FormData","append","handleShow","renderCategories","categories","myCategories","push","label","name","value","_id","children","length","createCategoryList","options","parentId","handleCategoryImage","e","target","files","updateCategory","forEach","categoryId","index","find","_index","console","log","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen","map","option","len"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,SAAtB,EAAiCC,GAAjC,QAA4C,iBAA5C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,iDAAP;AACA,SACEC,oBADF,EAEEC,aAFF,EAGEC,iBAHF,EAIEC,cAJF,QAKO,gBALP;;;AAOA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACsB,gBAAD,EAAmBC,mBAAnB,IAA0CvB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACwB,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC0B,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC8B,YAAD,EAAeC,eAAf,IAAkC/B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACgC,aAAD,EAAgBC,gBAAhB,IAAoCjC,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACkC,mBAAD,EAAsBC,sBAAtB,IAAgDnC,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAMoC,QAAQ,GAAG/B,WAAW,EAA5B;AAEA,QAAM,CAACgC,IAAD,EAAOC,OAAP,IAAkBtC,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMuC,WAAW,GAAG,MAAM;AACxB,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBtB,YAApB;AACAoB,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBpB,gBAAxB;AACAkB,IAAAA,IAAI,CAACE,MAAL,CAAY,eAAZ,EAA6BlB,aAA7B;AACAY,IAAAA,QAAQ,CAAC7B,WAAW,CAACiC,IAAD,CAAZ,CAAR;AACAnB,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,mBAAmB,CAAC,EAAD,CAAnB,CAPwB,CAQxB;AACA;AACA;AACA;AACA;;AAEAe,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAfD;;AAgBA,QAAMK,UAAU,GAAG,MAAML,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAMM,gBAAgB,GAAIC,UAAD,IAAgB;AACvC,QAAIC,YAAY,GAAG,EAAnB;;AACA,SAAK,IAAI5B,QAAT,IAAqB2B,UAArB,EAAiC;AAC/BC,MAAAA,YAAY,CAACC,IAAb,CAAkB;AAChBC,QAAAA,KAAK,EAAE9B,QAAQ,CAAC+B,IADA;AAEhBC,QAAAA,KAAK,EAAEhC,QAAQ,CAACiC,GAFA;AAGhBC,QAAAA,QAAQ,EACNlC,QAAQ,CAACkC,QAAT,CAAkBC,MAAlB,GAA2B,CAA3B,IAAgCT,gBAAgB,CAAC1B,QAAQ,CAACkC,QAAV;AAJlC,OAAlB;AAMD;;AACD,WAAON,YAAP;AACD,GAXD;;AAYA,QAAMQ,kBAAkB,GAAG,CAACT,UAAD,EAAaU,OAAO,GAAG,EAAvB,KAA8B;AACvD,SAAK,IAAIrC,QAAT,IAAqB2B,UAArB,EAAiC;AAC/BU,MAAAA,OAAO,CAACR,IAAR,CAAa;AAAEG,QAAAA,KAAK,EAAEhC,QAAQ,CAACiC,GAAlB;AAAuBF,QAAAA,IAAI,EAAE/B,QAAQ,CAAC+B,IAAtC;AAA2CO,QAAAA,QAAQ,EAAEtC,QAAQ,CAACsC;AAA9D,OAAb;;AACA,UAAItC,QAAQ,CAACkC,QAAT,CAAkBC,MAAlB,GAA2B,CAA/B,EAAkC;AAChCC,QAAAA,kBAAkB,CAACpC,QAAQ,CAACkC,QAAV,EAAoBG,OAApB,CAAlB;AACD;AACF;;AAED,WAAOA,OAAP;AACD,GATD;;AAUA,QAAME,mBAAmB,GAAIC,CAAD,IAAO;AACjCjC,IAAAA,gBAAgB,CAACiC,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAhB;AACD,GAFD;;AAGA,QAAMC,cAAc,GAAG,MAAM;AAC3B1B,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACA,UAAMU,UAAU,GAAGS,kBAAkB,CAACpC,QAAQ,CAAC2B,UAAV,CAArC;AACA,UAAMf,YAAY,GAAG,EAArB;AACA,UAAME,aAAa,GAAG,EAAtB;AACAN,IAAAA,OAAO,CAAC2B,MAAR,GAAe,CAAf,IAAmB3B,OAAO,CAACoC,OAAR,CAAgB,CAACC,UAAD,EAAYC,KAAZ,KAAoB;AACrD,YAAM9C,QAAQ,GAAG2B,UAAU,CAACoB,IAAX,CAAgB,CAAC/C,QAAD,EAAUgD,MAAV,KAAmBH,UAAU,IAAI7C,QAAQ,CAACgC,KAA1D,CAAjB;AACAhC,MAAAA,QAAQ,IAAIY,YAAY,CAACiB,IAAb,CAAkB7B,QAAlB,CAAZ;AACD,KAHkB,CAAnB;AAIAU,IAAAA,QAAQ,CAACyB,MAAT,GAAgB,CAAhB,IAAoBzB,QAAQ,CAACkC,OAAT,CAAiB,CAACC,UAAD,EAAYC,KAAZ,KAAoB;AACvD,YAAM9C,QAAQ,GAAG2B,UAAU,CAACoB,IAAX,CAAgB,CAAC/C,QAAD,EAAUgD,MAAV,KAAmBH,UAAU,IAAI7C,QAAQ,CAACgC,KAA1D,CAAjB;AACAhC,MAAAA,QAAQ,IAAIc,aAAa,CAACe,IAAd,CAAmB7B,QAAnB,CAAZ;AACD,KAHmB,CAApB;AAIAiD,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAC1C,MAAAA,OAAD;AAASE,MAAAA,QAAT;AAAkBiB,MAAAA,UAAlB;AAA6Bf,MAAAA,YAA7B;AAA0CE,MAAAA;AAA1C,KAAZ;AACD,GAdD;;AAeA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAA,4BACE,QAAC,SAAD;AAAA,8BACE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA,iCACE;AAAK,YAAA,KAAK,EAAE;AAAEqC,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,cAAc,EAAE;AAAnC,aAAZ;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,cAAA,OAAO,EAAE3B,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA,iCAEE,QAAC,YAAD;AACE,YAAA,KAAK,EAAEC,gBAAgB,CAAC1B,QAAQ,CAAC2B,UAAV,CADzB;AAEE,YAAA,OAAO,EAAEnB,OAFX;AAGE,YAAA,QAAQ,EAAEE,QAHZ;AAIE,YAAA,OAAO,EAAGF,OAAD,IAAaC,UAAU,CAACD,OAAD,CAJlC;AAKE,YAAA,QAAQ,EAAGE,QAAD,IAAcC,WAAW,CAACD,QAAD,CALrC;AAME,YAAA,KAAK,EAAE;AACL2C,cAAAA,KAAK,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,sBADF;AAELC,cAAAA,OAAO,eAAE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAGLC,cAAAA,SAAS,eAAE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,sBAHN;AAILC,cAAAA,WAAW,eAAE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,sBAJR;AAKLC,cAAAA,UAAU,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AALP;AANT;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eA4BE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,OAAO,EAAEd,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoCE,QAAC,KAAD;AACE,MAAA,IAAI,EAAExB,IADR;AAEE,MAAA,WAAW,EAAEE,WAFf;AAGE,MAAA,UAAU,EAAE,kBAHd;AAAA,8BAKE,QAAC,KAAD;AACE,QAAA,KAAK,EAAEnB,YADT;AAEE,QAAA,WAAW,EAAG,eAFhB;AAGE,QAAA,QAAQ,EAAGsC,CAAD,IAAOrC,eAAe,CAACqC,CAAC,CAACC,MAAF,CAAST,KAAV;AAHlC;AAAA;AAAA;AAAA;AAAA,cALF,eAWE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,KAAK,EAAE5B,gBAFT;AAGE,QAAA,QAAQ,EAAGoC,CAAD,IAAOnC,mBAAmB,CAACmC,CAAC,CAACC,MAAF,CAAST,KAAV,CAHtC;AAAA,gCAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAMGI,kBAAkB,CAACpC,QAAQ,CAAC2B,UAAV,CAAlB,CAAwC+B,GAAxC,CAA6CC,MAAD,iBAC3C;AAA2B,UAAA,KAAK,EAAEA,MAAM,CAAC3B,KAAzC;AAAA,oBACG2B,MAAM,CAAC5B;AADV,WAAa4B,MAAM,CAAC3B,KAApB;AAAA;AAAA;AAAA;AAAA,gBADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAuBE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,eAFP;AAGE,QAAA,QAAQ,EAAEO;AAHZ;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YApCF,eAmEE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEvB,mBADR;AAEE,MAAA,WAAW,EAAE,MAAMC,sBAAsB,CAAC,KAAD,CAF3C;AAGE,MAAA,UAAU,EAAE,mBAHd;AAIE,MAAA,IAAI,EAAC,IAJP;AAAA,8BAME,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,EAYIH,aAAa,CAAC8C,GAZlB,eAcE,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,KAAK,EAAE1D,YADT;AAEE,YAAA,WAAW,EAAG,eAFhB;AAGE,YAAA,QAAQ,EAAGsC,CAAD,IAAOrC,eAAe,CAACqC,CAAC,CAACC,MAAF,CAAST,KAAV;AAHlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,GAAD;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,KAAK,EAAE5B,gBAFT;AAGE,YAAA,QAAQ,EAAGoC,CAAD,IAAOnC,mBAAmB,CAACmC,CAAC,CAACC,MAAF,CAAST,KAAV,CAHtC;AAAA,oCAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,EAMGI,kBAAkB,CAACpC,QAAQ,CAAC2B,UAAV,CAAlB,CAAwC+B,GAAxC,CAA6CC,MAAD,iBAC3C;AAA2B,cAAA,KAAK,EAAEA,MAAM,CAAC3B,KAAzC;AAAA,wBACG2B,MAAM,CAAC5B;AADV,eAAa4B,MAAM,CAAC3B,KAApB;AAAA;AAAA;AAAA;AAAA,oBADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF,eAsBE,QAAC,GAAD;AAAA,iCACM;AACE,YAAA,SAAS,EAAC,cADZ;AAAA,oCAGE;AAAQ,cAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAQ,cAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnEF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6HD,CApMD;;GAAMlC,Q;UACaV,W,EASAD,W;;;KAVbW,Q;AAqMN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCategory } from \"../../actions\";\r\nimport Layout from \"../../components/layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\nimport {\r\n  IoIosCheckboxOutline,\r\n  IoIosCheckbox,\r\n  IoIosArrowForward,\r\n  IoIosArrowDown,\r\n} from \"react-icons/io\";\r\n\r\nconst Category = (props) => {\r\n  const category = useSelector((state) => state.category);\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(\"\");\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [checkedArray, setCheckedArray] = useState([]);\r\n  const [expandedArray, setExpandedArray] = useState([]);\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", categoryName);\r\n    form.append(\"parentId\", parentCategoryId);\r\n    form.append(\"categoryImage\", categoryImage);\r\n    dispatch(addCategory(form));\r\n    setCategoryName(\"\");\r\n    setParentCategoryId(\"\");\r\n    // const cat = {\r\n    //     categoryName,\r\n    //     parentCategoryId,\r\n    //     categoryImage\r\n    // };\r\n\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category of categories) {\r\n      myCategories.push({\r\n        label: category.name,\r\n        value: category._id,\r\n        children:\r\n          category.children.length > 0 && renderCategories(category.children),\r\n      });\r\n    }\r\n    return myCategories;\r\n  };\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name,parentId: category.parentId});\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n  const handleCategoryImage = (e) => {\r\n    setCategoryImage(e.target.files[0]);\r\n  };\r\n  const updateCategory = () => {\r\n    setUpdateCategoryModal(true);\r\n    const categories = createCategoryList(category.categories);\r\n    const checkedArray = [];\r\n    const expandedArray = [];\r\n    checked.length>0&& checked.forEach((categoryId,index)=>{\r\n      const category = categories.find((category,_index)=>categoryId == category.value);\r\n      category && checkedArray.push(category);\r\n    })\r\n    expanded.length>0&& expanded.forEach((categoryId,index)=>{\r\n      const category = categories.find((category,_index)=>categoryId == category.value);\r\n      category && expandedArray.push(category);\r\n    })\r\n    console.log({checked,expanded,categories,checkedArray,expandedArray});\r\n  };\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Category</h3>\r\n              <button onClick={handleShow}>Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            {/* <ul>{renderCategories(category.categories)}</ul> */}\r\n            <CheckboxTree\r\n              nodes={renderCategories(category.categories)}\r\n              checked={checked}\r\n              expanded={expanded}\r\n              onCheck={(checked) => setChecked(checked)}\r\n              onExpand={(expanded) => setExpanded(expanded)}\r\n              icons={{\r\n                check: <IoIosCheckbox />,\r\n                uncheck: <IoIosCheckboxOutline />,\r\n                halfCheck: <IoIosCheckboxOutline />,\r\n                expandClose: <IoIosArrowForward />,\r\n                expandOpen: <IoIosArrowDown />,\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <button>Delete</button>\r\n            <button onClick={updateCategory}>Edit</button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={\"Add New Category\"}\r\n      >\r\n        <Input\r\n          value={categoryName}\r\n          placeholder={`Category Name`}\r\n          onChange={(e) => setCategoryName(e.target.value)}\r\n        />\r\n\r\n        <select\r\n          className=\"form-control\"\r\n          value={parentCategoryId}\r\n          onChange={(e) => setParentCategoryId(e.target.value)}\r\n        >\r\n          <option>select category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"file\"\r\n          name=\"categoryImage\"\r\n          onChange={handleCategoryImage}\r\n        />\r\n      </Modal>\r\n      {/* Edit category */}\r\n\r\n      <Modal\r\n        show={updateCategoryModal}\r\n        handleClose={() => setUpdateCategoryModal(false)}\r\n        modalTitle={\"Update Categories\"}\r\n        size=\"lg\"\r\n      >\r\n        <Row>\r\n          <Col>\r\n              <h6>Expanded</h6>\r\n          </Col>\r\n        </Row>\r\n        {\r\n          expandedArray.len\r\n        }\r\n        <Row>\r\n          <Col>\r\n            <Input\r\n              value={categoryName}\r\n              placeholder={`Category Name`}\r\n              onChange={(e) => setCategoryName(e.target.value)}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <select\r\n              className=\"form-control\"\r\n              value={parentCategoryId}\r\n              onChange={(e) => setParentCategoryId(e.target.value)}\r\n            >\r\n              <option>select category</option>\r\n              {createCategoryList(category.categories).map((option) => (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </Col>\r\n          <Col>\r\n                <select\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"\">Select Type</option>\r\n                  <option value=\"store\">Store</option>\r\n                  <option value=\"product\">Product</option>\r\n                  <option value=\"page\">Page</option>\r\n                </select>\r\n          </Col>\r\n        </Row>\r\n        \r\n\r\n        {/* <input\r\n          type=\"file\"\r\n          name=\"categoryImage\"\r\n          onChange={handleCategoryImage}\r\n        /> */}\r\n      </Modal>\r\n    </Layout>\r\n  );\r\n};\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}