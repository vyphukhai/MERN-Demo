{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\MERN-Demo\\\\admin-app\\\\src\\\\containers\\\\Category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCategory } from \"../../actions\";\nimport Layout from \"../../components/layout\";\nimport Input from \"../../components/UI/Input\";\nimport Modal from \"../../components/UI/Modal\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown } from \"react-icons/io\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const [categoryName, setCategoryName] = useState(\"\");\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\n  const [categoryImage, setCategoryImage] = useState(\"\");\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategory, setUpdateCategory] = useState(false);\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append(\"name\", categoryName);\n    form.append(\"parentId\", parentCategoryId);\n    form.append(\"categoryImage\", categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName(\"\");\n    setParentCategoryId(\"\"); // const cat = {\n    //     categoryName,\n    //     parentCategoryId,\n    //     categoryImage\n    // };\n\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return myCategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShow,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n            nodes: renderCategories(category.categories),\n            checked: checked,\n            expanded: expanded,\n            onCheck: checked => setChecked(checked),\n            onExpand: expanded => setExpanded(expanded),\n            icons: {\n              check: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 24\n              }, this),\n              uncheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 26\n              }, this),\n              halfCheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 28\n              }, this),\n              expandClose: /*#__PURE__*/_jsxDEV(IoIosArrowForward, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this),\n              expandOpen: /*#__PURE__*/_jsxDEV(IoIosArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 29\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      handleClose: handleClose,\n      modalTitle: \"Add New Category\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: categoryName,\n        placeholder: `Category Name`,\n        onChange: e => setCategoryName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: parentCategoryId,\n        onChange: e => setParentCategoryId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"select category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.name\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"categoryImage\",\n        onChange: handleCategoryImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: updateCategory,\n      handleClose: updateCategory,\n      modalTitle: \"Add New Category\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: categoryName,\n        placeholder: `Category Name`,\n        onChange: e => setCategoryName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: parentCategoryId,\n        onChange: e => setParentCategoryId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"select category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.name\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"categoryImage\",\n        onChange: handleCategoryImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"NZPQNeb/RjotdYl6eBGCnG9RD/Q=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/MERN-Demo/admin-app/src/containers/Category/index.js"],"names":["React","useState","Col","Container","Row","useDispatch","useSelector","addCategory","Layout","Input","Modal","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","Category","props","category","state","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategory","setUpdateCategory","dispatch","show","setShow","handleClose","form","FormData","append","handleShow","renderCategories","categories","myCategories","push","label","name","value","_id","children","length","createCategoryList","options","handleCategoryImage","e","target","files","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen","map","option"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCategory } from \"../../actions\";\r\nimport Layout from \"../../components/layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward,IoIosArrowDown } from \"react-icons/io\";\r\n\r\nconst Category = (props) => {\r\n  const category = useSelector((state) => state.category);\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(\"\");\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [checkedArray,setCheckedArray] = useState([]);\r\n  const [expandedArray,setExpandedArray] = useState([]);\r\n  const [updateCategory,setUpdateCategory] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", categoryName);\r\n    form.append(\"parentId\", parentCategoryId);\r\n    form.append(\"categoryImage\", categoryImage);\r\n    dispatch(addCategory(form));\r\n    setCategoryName(\"\");\r\n    setParentCategoryId(\"\");\r\n    // const cat = {\r\n    //     categoryName,\r\n    //     parentCategoryId,\r\n    //     categoryImage\r\n    // };\r\n\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category of categories) {\r\n      myCategories.push({\r\n        label: category.name,\r\n        value: category._id,\r\n        children:\r\n          category.children.length > 0 && renderCategories(category.children),\r\n      });\r\n    }\r\n    return myCategories;\r\n  };\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n  const handleCategoryImage = (e) => {\r\n    setCategoryImage(e.target.files[0]);\r\n  };\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Category</h3>\r\n              <button onClick={handleShow}>Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            {/* <ul>{renderCategories(category.categories)}</ul> */}\r\n            <CheckboxTree\r\n              nodes={renderCategories(category.categories)}\r\n              checked={checked}\r\n              expanded={expanded}\r\n              onCheck={(checked) => setChecked(checked)}\r\n              onExpand={(expanded) => setExpanded(expanded)}\r\n              icons={{\r\n                check: <IoIosCheckbox/>,\r\n                uncheck: <IoIosCheckboxOutline/>,\r\n                halfCheck: <IoIosCheckboxOutline/>,\r\n                expandClose: (\r\n                  <IoIosArrowForward/>\r\n                ),\r\n                expandOpen: <IoIosArrowDown/>,\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={\"Add New Category\"}\r\n      >\r\n        <Input\r\n          value={categoryName}\r\n          placeholder={`Category Name`}\r\n          onChange={(e) => setCategoryName(e.target.value)}\r\n        />\r\n\r\n        <select\r\n          className=\"form-control\"\r\n          value={parentCategoryId}\r\n          onChange={(e) => setParentCategoryId(e.target.value)}\r\n        >\r\n          <option>select category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"file\"\r\n          name=\"categoryImage\"\r\n          onChange={handleCategoryImage}\r\n        />\r\n      </Modal>\r\n      {/* Edit category */}\r\n\r\n      <Modal\r\n        show={updateCategory}\r\n        handleClose={updateCategory}\r\n        modalTitle={\"Add New Category\"}\r\n      >\r\n        <Input\r\n          value={categoryName}\r\n          placeholder={`Category Name`}\r\n          onChange={(e) => setCategoryName(e.target.value)}\r\n        />\r\n\r\n        <select\r\n          className=\"form-control\"\r\n          value={parentCategoryId}\r\n          onChange={(e) => setParentCategoryId(e.target.value)}\r\n        >\r\n          <option>select category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"file\"\r\n          name=\"categoryImage\"\r\n          onChange={handleCategoryImage}\r\n        />\r\n      </Modal>\r\n    </Layout>\r\n  );\r\n};\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}