{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\MERN-Demo\\\\admin-app\\\\src\\\\containers\\\\Category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCategory, getAllCategory, updateCategories } from \"../../actions\";\nimport Layout from \"../../components/layout\";\nimport Input from \"../../components/UI/Input\";\nimport Modal from \"../../components/UI/Modal\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown } from \"react-icons/io\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const [categoryName, setCategoryName] = useState(\"\");\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\n  const [categoryImage, setCategoryImage] = useState(\"\");\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append(\"name\", categoryName);\n    form.append(\"parentId\", parentCategoryId);\n    form.append(\"categoryImage\", categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName(\"\");\n    setParentCategoryId(\"\"); // const cat = {\n    //     categoryName,\n    //     parentCategoryId,\n    //     categoryImage\n    // };\n\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return myCategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    setUpdateCategoryModal(true);\n  };\n\n  const updateCheckedAndExpandedCategories = () => ка;\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type === \"checked\") {\n      const updatedCheckedArray = checkedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckedArray);\n    } else if (type === \"expanded\") {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    }\n  };\n\n  const updateCategoriesForm = () => {\n    const form = new FormData();\n    expandedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n      form.append('type', item.type);\n    });\n    checkedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n      form.append('type', item.type);\n    });\n    dispatch(updateCategories(form)).then(result => {\n      if (result) {\n        dispatch(getAllCategory());\n      }\n    });\n    setUpdateCategoryModal(false);\n  };\n\n  const renderUpdateCategoriesModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: updateCategoryModal,\n      handleClose: updateCategoriesForm,\n      modalTitle: \"Update Categories\",\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Expanded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 8\n      }, this), expandedArray.length > 0 && expandedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: item.name,\n            placeholder: `Category Name`,\n            onChange: e => handleCategoryInput('name', e.target.value, index, 'expanded')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: item.parentId,\n            onChange: e => handleCategoryInput('parentId', e.target.value, index, 'expanded'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"select category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 18\n            }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 20\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"store\",\n              children: \"Store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"product\",\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"page\",\n              children: \"Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 14\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 12\n      }, this)), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Checked Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 10\n      }, this), checkedArray.length > 0 && checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: item.name,\n            placeholder: `Category Name`,\n            onChange: e => handleCategoryInput('name', e.target.value, index, 'checked')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: item.parentId,\n            onChange: e => handleCategoryInput('parentId', e.target.value, index, 'checked'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"select category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 18\n            }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 20\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"store\",\n              children: \"Store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"product\",\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"page\",\n              children: \"Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 14\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 12\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 8\n    }, this);\n  };\n\n  const renderAddCategoryModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      handleClose: handleClose,\n      modalTitle: \"Add New Category\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: categoryName,\n        placeholder: `Category Name`,\n        onChange: e => setCategoryName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: parentCategoryId,\n        onChange: e => setParentCategoryId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"select category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.name\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"categoryImage\",\n        onChange: handleCategoryImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  };\n\n  const deleteCategory = () => {\n    setDeleteCategoryModal(true);\n  };\n\n  const renderDeleteCategoryModal = () => {\n    console.log('delete', checkedArray);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      modalTitle: \"Confirm\",\n      show: deleteCategoryModal,\n      handleClose: () => setDeleteCategoryModal(false),\n      buttons: [{\n        label: 'No',\n        color: 'primary',\n        onClick: () => {\n          alert('no');\n        }\n      }, {\n        label: 'Yes',\n        color: 'danger',\n        onClick: () => {\n          alert('yes');\n        }\n      }],\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Expanded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShow,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n            nodes: renderCategories(category.categories),\n            checked: checked,\n            expanded: expanded,\n            onCheck: checked => setChecked(checked),\n            onExpand: expanded => setExpanded(expanded),\n            icons: {\n              check: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 24\n              }, this),\n              uncheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 26\n              }, this),\n              halfCheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 28\n              }, this),\n              expandClose: /*#__PURE__*/_jsxDEV(IoIosArrowForward, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 30\n              }, this),\n              expandOpen: /*#__PURE__*/_jsxDEV(IoIosArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 29\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteCategory,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: updateCategory,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), renderAddCategoryModal(), renderUpdateCategoriesModal(), renderDeleteCategoryModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"YEoHbzaclP6cLuEiTPaHrTTz5JQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/MERN-Demo/admin-app/src/containers/Category/index.js"],"names":["React","useState","Button","Col","Container","Row","useDispatch","useSelector","addCategory","getAllCategory","updateCategories","Layout","Input","Modal","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","Category","props","category","state","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","deleteCategoryModal","setDeleteCategoryModal","dispatch","show","setShow","handleClose","form","FormData","append","handleShow","renderCategories","categories","myCategories","push","label","name","value","_id","children","length","createCategoryList","options","parentId","handleCategoryImage","e","target","files","updateCategory","updateCheckedAndExpandedCategories","ка","handleCategoryInput","key","index","type","updatedCheckedArray","map","item","_index","updatedExpandedArray","updateCategoriesForm","forEach","then","result","renderUpdateCategoriesModal","option","renderAddCategoryModal","deleteCategory","renderDeleteCategoryModal","console","log","color","onClick","alert","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCategory, getAllCategory, updateCategories } from \"../../actions\";\r\nimport Layout from \"../../components/layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\nimport {\r\n  IoIosCheckboxOutline,\r\n  IoIosCheckbox,\r\n  IoIosArrowForward,\r\n  IoIosArrowDown,\r\n} from \"react-icons/io\";\r\n\r\nconst Category = (props) => {\r\n  const category = useSelector((state) => state.category);\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(\"\");\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [checkedArray, setCheckedArray] = useState([]);\r\n  const [expandedArray, setExpandedArray] = useState([]);\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", categoryName);\r\n    form.append(\"parentId\", parentCategoryId);\r\n    form.append(\"categoryImage\", categoryImage);\r\n    dispatch(addCategory(form));\r\n    setCategoryName(\"\");\r\n    setParentCategoryId(\"\");\r\n    // const cat = {\r\n    //     categoryName,\r\n    //     parentCategoryId,\r\n    //     categoryImage\r\n    // };\r\n\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category of categories) {\r\n      myCategories.push({\r\n        label: category.name,\r\n        value: category._id,\r\n        children:\r\n          category.children.length > 0 && renderCategories(category.children),\r\n      });\r\n    }\r\n    return myCategories;\r\n  };\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({\r\n        value: category._id,\r\n        name: category.name,\r\n        parentId: category.parentId,\r\n      });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n  const handleCategoryImage = (e) => {\r\n    setCategoryImage(e.target.files[0]);\r\n  };\r\n  const updateCategory = () => {\r\n    setUpdateCategoryModal(true);\r\n    \r\n  };\r\n\r\n  const updateCheckedAndExpandedCategories = ()=>ка\r\n  \r\n\r\n  const handleCategoryInput = (key,value,index,type)=>{\r\n    if(type === \"checked\"){\r\n      const updatedCheckedArray = checkedArray.map((item,_index)=>index == _index ? {...item,[key]:value} : item);\r\n      setCheckedArray(updatedCheckedArray);\r\n    }else if(type===\"expanded\"){\r\n      const updatedExpandedArray = expandedArray.map((item,_index)=>index == _index ? {...item,[key]:value} : item);\r\n      setExpandedArray(updatedExpandedArray);\r\n    }\r\n  }\r\n  const updateCategoriesForm = () =>{\r\n    const form = new FormData();\r\n    expandedArray.forEach((item,index)=>{\r\n      form.append('_id',item.value);\r\n      form.append('name',item.name);\r\n      form.append('parentId',item.parentId ? item.parentId: \"\");\r\n      form.append('type',item.type);\r\n    })\r\n    checkedArray.forEach((item,index)=>{\r\n      form.append('_id',item.value);\r\n      form.append('name',item.name);\r\n      form.append('parentId',item.parentId ? item.parentId: \"\");\r\n      form.append('type',item.type);\r\n    })\r\n    dispatch(updateCategories(form))\r\n    .then(result =>{\r\n      if(result){\r\n        dispatch(getAllCategory());\r\n      }\r\n    })\r\n    setUpdateCategoryModal(false);\r\n  }\r\n  const renderUpdateCategoriesModal = ()=>{\r\n    return (\r\n       <Modal\r\n       show={updateCategoryModal}\r\n       handleClose={updateCategoriesForm}\r\n       modalTitle={\"Update Categories\"}\r\n       size=\"lg\"\r\n     >\r\n       <Row>\r\n         <Col>\r\n           <h6>Expanded</h6>\r\n         </Col>\r\n       </Row>\r\n       {expandedArray.length > 0 &&\r\n         expandedArray.map((item, index) => (\r\n           <Row key={index}>\r\n             <Col>\r\n               <Input\r\n                 value={item.name}\r\n                 placeholder={`Category Name`}\r\n                 onChange={(e)=> handleCategoryInput('name', e.target.value,index,'expanded')}\r\n               />\r\n             </Col>\r\n             <Col>\r\n               <select\r\n                 className=\"form-control\"\r\n                 value={item.parentId}\r\n                 onChange={(e)=> handleCategoryInput('parentId', e.target.value,index,'expanded')}\r\n               >\r\n                 <option>select category</option>\r\n                 {createCategoryList(category.categories).map((option) => (\r\n                   <option key={option.value} value={option.value}>\r\n                     {option.name}\r\n                   </option>\r\n                 ))}\r\n               </select>\r\n             </Col>\r\n             <Col>\r\n               <select className=\"form-control\">\r\n                 <option value=\"\">Select Type</option>\r\n                 <option value=\"store\">Store</option>\r\n                 <option value=\"product\">Product</option>\r\n                 <option value=\"page\">Page</option>\r\n               </select>\r\n             </Col>\r\n           </Row>\r\n         ))}\r\n         <h6>Checked Categories</h6>\r\n         {checkedArray.length > 0 &&\r\n         checkedArray.map((item, index) => (\r\n           <Row key={index}>\r\n             <Col>\r\n               <Input\r\n                 value={item.name}\r\n                 placeholder={`Category Name`}\r\n                 onChange={(e)=> handleCategoryInput('name', e.target.value,index,'checked')}\r\n               />\r\n             </Col>\r\n             <Col>\r\n               <select\r\n                 className=\"form-control\"\r\n                 value={item.parentId}\r\n                 onChange={(e)=> handleCategoryInput('parentId', e.target.value,index,'checked')}\r\n               >\r\n                 <option>select category</option>\r\n                 {createCategoryList(category.categories).map((option) => (\r\n                   <option key={option.value} value={option.value}>\r\n                     {option.name}\r\n                   </option>\r\n                 ))}\r\n               </select>\r\n             </Col>\r\n             <Col>\r\n               <select className=\"form-control\">\r\n                 <option value=\"\">Select Type</option>\r\n                 <option value=\"store\">Store</option>\r\n                 <option value=\"product\">Product</option>\r\n                 <option value=\"page\">Page</option>\r\n               </select>\r\n             </Col>\r\n           </Row>\r\n         ))}\r\n\r\n       {/* <input\r\n         type=\"file\"\r\n         name=\"categoryImage\"\r\n         onChange={handleCategoryImage}\r\n       /> */}\r\n     </Modal>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  const renderAddCategoryModal = () =>{\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={\"Add New Category\"}\r\n      >\r\n        <Input\r\n          value={categoryName}\r\n          placeholder={`Category Name`}\r\n          onChange={(e) => setCategoryName(e.target.value)}\r\n        />\r\n\r\n        <select\r\n          className=\"form-control\"\r\n          value={parentCategoryId}\r\n          onChange={(e) => setParentCategoryId(e.target.value)}\r\n        >\r\n          <option>select category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"file\"\r\n          name=\"categoryImage\"\r\n          onChange={handleCategoryImage}\r\n        />\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  const deleteCategory = () =>{\r\n    setDeleteCategoryModal(true);\r\n  }\r\n\r\n  const renderDeleteCategoryModal =()=>{\r\n    console.log('delete',checkedArray);\r\n    return (\r\n      <Modal\r\n        modalTitle = \"Confirm\"\r\n        show={deleteCategoryModal}\r\n        handleClose={()=> setDeleteCategoryModal(false)}\r\n        buttons={[\r\n          {\r\n            label: 'No',\r\n            color: 'primary',\r\n            onClick: ()=>{\r\n              alert('no');\r\n            }\r\n          },\r\n          {\r\n            label: 'Yes',\r\n            color: 'danger',\r\n            onClick: ()=>{\r\n              alert('yes');\r\n            }\r\n          }\r\n        ]\r\n\r\n        }\r\n      >\r\n        <h5>Expanded</h5>\r\n      </Modal>\r\n    );\r\n  }\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Category</h3>\r\n              <button onClick={handleShow}>Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            {/* <ul>{renderCategories(category.categories)}</ul> */}\r\n            <CheckboxTree\r\n              nodes={renderCategories(category.categories)}\r\n              checked={checked}\r\n              expanded={expanded}\r\n              onCheck={(checked) => setChecked(checked)}\r\n              onExpand={(expanded) => setExpanded(expanded)}\r\n              icons={{\r\n                check: <IoIosCheckbox />,\r\n                uncheck: <IoIosCheckboxOutline />,\r\n                halfCheck: <IoIosCheckboxOutline />,\r\n                expandClose: <IoIosArrowForward />,\r\n                expandOpen: <IoIosArrowDown />,\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <button onClick={deleteCategory}>Delete</button>\r\n            <button onClick={updateCategory}>Edit</button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      {renderAddCategoryModal()}\r\n     {renderUpdateCategoriesModal()}\r\n     {renderDeleteCategoryModal()}\r\n    </Layout>\r\n  );\r\n};\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}