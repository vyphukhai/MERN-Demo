{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\MERN-Demo\\\\admin-app\\\\src\\\\containers\\\\Category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, Container, Modal, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllCategory } from \"../../actions\";\nimport Layout from \"../../components/layout\";\nimport Input from \"../../components/UI/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Category(props) {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(`Category.js`);\n    dispatch(getAllCategory());\n  }, []);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [category.name, category.children.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: renderCategories(category.children)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 48\n        }, this) : null]\n      }, category.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this));\n    }\n\n    return myCategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShow,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: renderCategories(category.categories)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add New Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: categoryName,\n          placeholder: `Category Name`,\n          onChange: e => setCategoryName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"select category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.name\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"categoryImage\",\n          onChange: handleCategoryImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Category, \"fPeCDaPiu0b+LkyWHSx49x4LIZc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/MERN-Demo/admin-app/src/containers/Category/index.js"],"names":["React","useEffect","useState","Button","Col","Container","Modal","Row","useDispatch","useSelector","getAllCategory","Layout","Input","Category","props","category","state","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","dispatch","console","log","show","setShow","handleClose","handleShow","renderCategories","categories","myCategories","push","name","children","length","createCategoryList","options","value","_id","handleCategoryImage","e","display","justifyContent","target","map","option"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Modal, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllCategory } from \"../../actions\";\r\nimport Layout from \"../../components/layout\";\r\nimport Input from \"../../components/UI/Input\";\r\n\r\nexport default function Category(props) {\r\n    const category = useSelector(state => state.category);\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [parentCategoryId, setParentCategoryId] = useState('');\r\n    const [categoryImage, setCategoryImage] = useState('');\r\n    const dispatch = useDispatch();\r\n  useEffect(() => {\r\n      console.log(`Category.js`);\r\n    dispatch(getAllCategory());\r\n  }, []);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const renderCategories = (categories) => {\r\n\r\n    let myCategories = [];\r\n    for(let category of categories){\r\n        myCategories.push(\r\n            <li key={category.name}>\r\n                {category.name}\r\n                {category.children.length >0 ?(<ul>{renderCategories(category.children)}</ul>):null}\r\n            </li>\r\n        );\r\n    }\r\n    return myCategories;\r\n\r\n  }\r\n  const createCategoryList = (categories, options = [])=>{\r\n    for(let category of categories){\r\n        options.push({value: category._id, name: category.name});\r\n        if(category.children.length>0){\r\n            createCategoryList(category.children, options)\r\n        }\r\n    }\r\n\r\n    return options;\r\n  }\r\n  const handleCategoryImage = (e)=>{\r\n      setCategoryImage\r\n  }\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Category</h3>\r\n              <button onClick={handleShow}>Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col md={12}>\r\n                <ul>\r\n                    {renderCategories(category.categories)}\r\n                    \r\n                </ul>\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add New Category</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Input\r\n                value={categoryName}\r\n                placeholder={`Category Name`}\r\n                onChange ={(e)=> setCategoryName(e.target.value)}\r\n            />\r\n\r\n        <select className=\"form-control\">\r\n            <option>select category</option>\r\n            {\r\n                createCategoryList(category.categories).map(option=>\r\n                    <option key={option.value} value= {option.value}>{option.name}</option>)\r\n            }\r\n        </select>\r\n        <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}