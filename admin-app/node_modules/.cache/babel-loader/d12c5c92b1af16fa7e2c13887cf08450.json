{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\MERN-Demo\\\\admin-app\\\\src\\\\containers\\\\Orders\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateOrder } from \"../../actions\";\nimport Layout from \"../../components/layout\";\nimport Card from \"../../components/UI/Card\";\nimport \"./style.css\";\n/**\r\n * @author\r\n * @function Orders\r\n **/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Orders = props => {\n  _s();\n\n  const order = useSelector(state => state.order);\n  const [type, setType] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const onOrderUpdate = orderId => {\n    const payload = {\n      orderId,\n      type\n    };\n    dispatch(updateOrder(payload));\n  };\n\n  const formatDate = date => {\n    if (date) {\n      const d = new Date(date);\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\n    }\n\n    return \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: order.orders.map((orderItem, index) => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        margin: \"10px 0\"\n      },\n      headerLeft: orderItem._id,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          padding: \"50px 50px\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: \"Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), orderItem.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"value\",\n            children: item.productId.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title\",\n            children: \"Total Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: orderItem.totalAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title\",\n            children: \"Payment Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 59\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: orderItem.paymentType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title\",\n            children: \"Payment Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value\",\n            children: orderItem.paymentStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          boxSizing: \"border-box\",\n          padding: \"100px\",\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orderTrack\",\n          children: orderItem.orderStatus.map(status => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `orderStatus ${status.isCompleted ? \"active\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `point ${status.isCompleted ? \"active\" : \"\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"orderInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status\",\n                children: status.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date\",\n                children: formatDate(status.date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"0 50px\",\n            boxSizing: \"border-box\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"select status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), orderItem.orderStatus.map(status => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: !status.isCompleted ? /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: status.type,\n                  children: status.type\n                }, status.type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 25\n                }, this) : null\n              }, void 0, false);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"0 50px\",\n            boxSizing: \"border-box\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onOrderUpdate(orderItem._id),\n            children: \"confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Orders, \"DJe6dUD7pcLQ9SEy+JKpf32O1wk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/MERN-Demo/admin-app/src/containers/Orders/index.js"],"names":["React","useState","useDispatch","useSelector","updateOrder","Layout","Card","Orders","props","order","state","type","setType","dispatch","onOrderUpdate","orderId","payload","formatDate","date","d","Date","getFullYear","getMonth","getDate","orders","map","orderItem","index","margin","_id","display","justifyContent","padding","alignItems","items","item","productId","name","totalAmount","paymentType","paymentStatus","boxSizing","orderStatus","status","isCompleted","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateOrder } from \"../../actions\";\r\nimport Layout from \"../../components/layout\";\r\nimport Card from \"../../components/UI/Card\";\r\n\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function Orders\r\n **/\r\n\r\nconst Orders = (props) => {\r\n  const order = useSelector((state) => state.order);\r\n  const [type, setType] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const onOrderUpdate = (orderId) => {\r\n    const payload = {\r\n      orderId,\r\n      type,\r\n    };\r\n    dispatch(updateOrder(payload));\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    if (date) {\r\n      const d = new Date(date);\r\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      {order.orders.map((orderItem, index) => (\r\n        <Card\r\n          style={{\r\n            margin: \"10px 0\",\r\n          }}\r\n          key={index}\r\n          headerLeft={orderItem._id}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              padding: \"50px 50px\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div>\r\n              <div className=\"title\">Items</div>\r\n              {orderItem.items.map((item, index) => (\r\n                <div className=\"value\" key={index}>\r\n                  {item.productId.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div>\r\n              <span className=\"title\">Total Price</span>\r\n              <br />\r\n              <span className=\"value\">{orderItem.totalAmount}</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"title\">Payment Type</span> <br />\r\n              <span className=\"value\">{orderItem.paymentType}</span>\r\n            </div>\r\n            <div>\r\n              <span className=\"title\">Payment Status</span> <br />\r\n              <span className=\"value\">{orderItem.paymentStatus}</span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              boxSizing: \"border-box\",\r\n              padding: \"100px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div className=\"orderTrack\">\r\n              {orderItem.orderStatus.map((status) => (\r\n                <div\r\n                  className={`orderStatus ${\r\n                    status.isCompleted ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <div\r\n                    className={`point ${status.isCompleted ? \"active\" : \"\"}`}\r\n                  ></div>\r\n                  <div className=\"orderInfo\">\r\n                    <div className=\"status\">{status.type}</div>\r\n                    <div className=\"date\">{formatDate(status.date)}</div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* select input to apply order action */}\r\n            <div\r\n              style={{\r\n                padding: \"0 50px\",\r\n                boxSizing: \"border-box\",\r\n              }}\r\n            >\r\n              <select onChange={(e) => setType(e.target.value)}>\r\n                <option value={\"\"}>select status</option>\r\n                {orderItem.orderStatus.map((status) => {\r\n                  return (\r\n                    <>\r\n                      {!status.isCompleted ? (\r\n                        <option key={status.type} value={status.type}>\r\n                          {status.type}\r\n                        </option>\r\n                      ) : null}\r\n                    </>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            {/* button to confirm action */}\r\n\r\n            <div\r\n              style={{\r\n                padding: \"0 50px\",\r\n                boxSizing: \"border-box\",\r\n              }}\r\n            >\r\n              <button onClick={() => onOrderUpdate(orderItem._id)}>\r\n                confirm\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      ))}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n"]},"metadata":{},"sourceType":"module"}