{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\MERN-Demo\\\\admin-app\\\\src\\\\containers\\\\Category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCategory, getAllCategory, updateCategories, deleteCategories as deleteCategoriesAction } from \"../../actions\";\nimport Layout from \"../../components/layout\";\nimport Input from \"../../components/UI/Input\";\nimport Modal from \"../../components/UI/Modal\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown } from \"react-icons/io\";\nimport UpdateCategoriesModal from \"./components/UpdateCategoriesModal\";\nimport AddCategoryModal from \"./components/AddCategoriesModal\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const [categoryName, setCategoryName] = useState(\"\");\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\n  const [categoryImage, setCategoryImage] = useState(\"\");\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => {\n    const form = new FormData();\n\n    if (categoryName === \"\") {\n      alert(\"Name is requ\");\n    }\n\n    form.append(\"name\", categoryName);\n    form.append(\"parentId\", parentCategoryId);\n    form.append(\"categoryImage\", categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName(\"\");\n    setParentCategoryId(\"\");\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return myCategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setUpdateCategoryModal(true);\n  };\n\n  const updateCheckedAndExpandedCategories = () => {\n    const categories = createCategoryList(category.categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && checkedArray.push(category);\n    });\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && expandedArray.push(category);\n    });\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n    console.log({\n      checked,\n      expanded,\n      categories,\n      checkedArray,\n      expandedArray\n    });\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type === \"checked\") {\n      const updatedCheckedArray = checkedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckedArray);\n    } else if (type === \"expanded\") {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    }\n  };\n\n  const updateCategoriesForm = () => {\n    const form = new FormData();\n    expandedArray.forEach((item, index) => {\n      form.append(\"_id\", item.value);\n      form.append(\"name\", item.name);\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\n      form.append(\"type\", item.type);\n    });\n    checkedArray.forEach((item, index) => {\n      form.append(\"_id\", item.value);\n      form.append(\"name\", item.name);\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\n      form.append(\"type\", item.type);\n    });\n    dispatch(updateCategories(form)).then(result => {\n      if (result) {\n        dispatch(getAllCategory());\n      }\n    });\n    setUpdateCategoryModal(false);\n  };\n\n  const renderAddCategoryModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      handleClose: handleClose,\n      modalTitle: \"Add New Category\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: categoryName,\n        placeholder: `Category Name`,\n        onChange: e => setCategoryName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: parentCategoryId,\n        onChange: e => setParentCategoryId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"select category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.name\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"categoryImage\",\n        onChange: handleCategoryImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  };\n\n  const deleteCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setDeleteCategoryModal(true);\n  };\n\n  const deleteCategories = () => {\n    const checkedIdsArray = checkedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const expandedIdsArray = expandedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\n\n    if (checkedIdsArray.length > 0) {\n      dispatch(deleteCategoriesAction(checkedIdsArray)).then(result => {\n        if (result) {\n          dispatch(getAllCategory());\n          setDeleteCategoryModal(false);\n        }\n      });\n    }\n  };\n\n  const renderDeleteCategoryModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      modalTitle: \"Confirm\",\n      show: deleteCategoryModal,\n      handleClose: () => setDeleteCategoryModal(false),\n      buttons: [{\n        label: \"No\",\n        color: \"primary\",\n        onClick: () => {\n          alert(\"no\");\n        }\n      }, {\n        label: \"Yes\",\n        color: \"danger\",\n        onClick: deleteCategories\n      }],\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Checked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 42\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  };\n\n  const categoryList = createCategoryList(category.categories);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShow,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n            nodes: renderCategories(category.categories),\n            checked: checked,\n            expanded: expanded,\n            onCheck: checked => setChecked(checked),\n            onExpand: expanded => setExpanded(expanded),\n            icons: {\n              check: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 24\n              }, this),\n              uncheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 26\n              }, this),\n              halfCheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 28\n              }, this),\n              expandClose: /*#__PURE__*/_jsxDEV(IoIosArrowForward, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 30\n              }, this),\n              expandOpen: /*#__PURE__*/_jsxDEV(IoIosArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 29\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteCategory,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: updateCategory,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCategoryModal, {\n      show: show,\n      handleClose: handleClose,\n      modalTitle: \"Add New Categories\",\n      categoryName: categoryName,\n      setCategoryName: setCategoryName,\n      parentCategoryId: parentCategoryId,\n      setParentCategoryId: setParentCategoryId,\n      categoryList: categoryList,\n      handleCategoryImage: handleCategoryImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateCategoriesModal, {\n      show: updateCategoryModal,\n      handleClose: updateCategoriesForm,\n      modalTitle: \"Update Categories\",\n      size: \"lg\",\n      expandedArray: expandedArray,\n      checkedArray: checkedArray,\n      handleCategoryInput: handleCategoryInput,\n      categoryList: categoryList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), renderDeleteCategoryModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"YEoHbzaclP6cLuEiTPaHrTTz5JQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/MERN-Demo/admin-app/src/containers/Category/index.js"],"names":["React","useState","Button","Col","Container","Row","useDispatch","useSelector","addCategory","getAllCategory","updateCategories","deleteCategories","deleteCategoriesAction","Layout","Input","Modal","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","UpdateCategoriesModal","AddCategoryModal","Category","props","category","state","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","deleteCategoryModal","setDeleteCategoryModal","dispatch","show","setShow","handleClose","form","FormData","alert","append","handleShow","renderCategories","categories","myCategories","push","label","name","value","_id","children","length","createCategoryList","options","parentId","handleCategoryImage","e","target","files","updateCategory","updateCheckedAndExpandedCategories","forEach","categoryId","index","find","_index","console","log","handleCategoryInput","key","type","updatedCheckedArray","map","item","updatedExpandedArray","updateCategoriesForm","then","result","renderAddCategoryModal","option","deleteCategory","checkedIdsArray","expandedIdsArray","idsArray","concat","renderDeleteCategoryModal","color","onClick","categoryList","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCategory, getAllCategory, updateCategories,deleteCategories as deleteCategoriesAction } from \"../../actions\";\r\nimport Layout from \"../../components/layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\nimport {\r\n  IoIosCheckboxOutline,\r\n  IoIosCheckbox,\r\n  IoIosArrowForward,\r\n  IoIosArrowDown,\r\n} from \"react-icons/io\";\r\nimport UpdateCategoriesModal from \"./components/UpdateCategoriesModal\";\r\nimport AddCategoryModal from \"./components/AddCategoriesModal\";\r\nimport './style.css';\r\n\r\nconst Category = (props) => {\r\n  const category = useSelector((state) => state.category);\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(\"\");\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [checkedArray, setCheckedArray] = useState([]);\r\n  const [expandedArray, setExpandedArray] = useState([]);\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n    if(categoryName===\"\"){\r\n      alert(\"Name is requ\")\r\n    }\r\n    form.append(\"name\", categoryName);\r\n    form.append(\"parentId\", parentCategoryId);\r\n    form.append(\"categoryImage\", categoryImage);\r\n    dispatch(addCategory(form));\r\n    setCategoryName(\"\");\r\n    setParentCategoryId(\"\");\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category of categories) {\r\n      myCategories.push({\r\n        label: category.name,\r\n        value: category._id,\r\n        children:\r\n          category.children.length > 0 && renderCategories(category.children),\r\n      });\r\n    }\r\n    return myCategories;\r\n  };\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({\r\n        value: category._id,\r\n        name: category.name,\r\n        parentId: category.parentId,\r\n      });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n  const handleCategoryImage = (e) => {\r\n    setCategoryImage(e.target.files[0]);\r\n  };\r\n  const updateCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setUpdateCategoryModal(true);\r\n  };\r\n\r\n  const updateCheckedAndExpandedCategories = () => {\r\n    const categories = createCategoryList(category.categories);\r\n    const checkedArray = [];\r\n    const expandedArray = [];\r\n    checked.length > 0 &&\r\n      checked.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, _index) => categoryId == category.value\r\n        );\r\n        category && checkedArray.push(category);\r\n      });\r\n    expanded.length > 0 &&\r\n      expanded.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, _index) => categoryId == category.value\r\n        );\r\n        category && expandedArray.push(category);\r\n      });\r\n    setCheckedArray(checkedArray);\r\n    setExpandedArray(expandedArray);\r\n    console.log({ checked, expanded, categories, checkedArray, expandedArray });\r\n  };\r\n\r\n  const handleCategoryInput = (key, value, index, type) => {\r\n    if (type === \"checked\") {\r\n      const updatedCheckedArray = checkedArray.map((item, _index) =>\r\n        index == _index ? { ...item, [key]: value } : item\r\n      );\r\n      setCheckedArray(updatedCheckedArray);\r\n    } else if (type === \"expanded\") {\r\n      const updatedExpandedArray = expandedArray.map((item, _index) =>\r\n        index == _index ? { ...item, [key]: value } : item\r\n      );\r\n      setExpandedArray(updatedExpandedArray);\r\n    }\r\n  };\r\n  const updateCategoriesForm = () => {\r\n    const form = new FormData();\r\n    expandedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\r\n      form.append(\"type\", item.type);\r\n    });\r\n    checkedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\r\n      form.append(\"type\", item.type);\r\n    });\r\n    dispatch(updateCategories(form)).then((result) => {\r\n      if (result) {\r\n        dispatch(getAllCategory());\r\n      }\r\n    });\r\n    setUpdateCategoryModal(false);\r\n  };\r\n\r\n  const renderAddCategoryModal = () => {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={\"Add New Category\"}\r\n      >\r\n        <Input\r\n          value={categoryName}\r\n          placeholder={`Category Name`}\r\n          onChange={(e) => setCategoryName(e.target.value)}\r\n        />\r\n\r\n        <select\r\n          className=\"form-control\"\r\n          value={parentCategoryId}\r\n          onChange={(e) => setParentCategoryId(e.target.value)}\r\n        >\r\n          <option>select category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"file\"\r\n          name=\"categoryImage\"\r\n          onChange={handleCategoryImage}\r\n        />\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const deleteCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setDeleteCategoryModal(true);\r\n  };\r\n\r\n  const deleteCategories =()=>{\r\n   const checkedIdsArray =checkedArray.map((item,index)=>({_id: item.value}));\r\n   const expandedIdsArray =expandedArray.map((item,index)=>({_id: item.value}));\r\n   const idsArray = expandedIdsArray.concat(checkedIdsArray);\r\n   if(checkedIdsArray.length>0){\r\n    dispatch(deleteCategoriesAction(checkedIdsArray))\r\n    .then(result =>{\r\n      if(result){\r\n        dispatch(getAllCategory());\r\n        setDeleteCategoryModal(false);\r\n      }\r\n    })\r\n   }\r\n   \r\n  }\r\n\r\n  const renderDeleteCategoryModal = () => {\r\n    return (\r\n      <Modal\r\n        modalTitle=\"Confirm\"\r\n        show={deleteCategoryModal}\r\n        handleClose={() => setDeleteCategoryModal(false)}\r\n        buttons={[\r\n          {\r\n            label: \"No\",\r\n            color: \"primary\",\r\n            onClick: () => {\r\n              alert(\"no\");\r\n            },\r\n          },\r\n          {\r\n            label: \"Yes\",\r\n            color: \"danger\",\r\n            onClick: deleteCategories\r\n          },\r\n        ]}\r\n      >\r\n        <h5>Checked</h5>\r\n        {\r\n          checkedArray.map((item,index)=><span key={index}>{item.name}</span>)\r\n        }\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const categoryList = createCategoryList(category.categories);\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Category</h3>\r\n              <button onClick={handleShow}>Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            {/* <ul>{renderCategories(category.categories)}</ul> */}\r\n            <CheckboxTree\r\n              nodes={renderCategories(category.categories)}\r\n              checked={checked}\r\n              expanded={expanded}\r\n              onCheck={(checked) => setChecked(checked)}\r\n              onExpand={(expanded) => setExpanded(expanded)}\r\n              icons={{\r\n                check: <IoIosCheckbox />,\r\n                uncheck: <IoIosCheckboxOutline />,\r\n                halfCheck: <IoIosCheckboxOutline />,\r\n                expandClose: <IoIosArrowForward />,\r\n                expandOpen: <IoIosArrowDown />,\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <button onClick={deleteCategory}>Delete</button>\r\n            <button onClick={updateCategory}>Edit</button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <AddCategoryModal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={\"Add New Categories\"}\r\n        categoryName={categoryName}\r\n        setCategoryName={setCategoryName}\r\n        parentCategoryId={parentCategoryId}\r\n        setParentCategoryId={setParentCategoryId}\r\n        categoryList={categoryList}\r\n        handleCategoryImage={handleCategoryImage}\r\n      />\r\n      <UpdateCategoriesModal\r\n        show={updateCategoryModal}\r\n        handleClose={updateCategoriesForm}\r\n        modalTitle={\"Update Categories\"}\r\n        size=\"lg\"\r\n        expandedArray={expandedArray}\r\n        checkedArray={checkedArray}\r\n        handleCategoryInput={handleCategoryInput}\r\n        categoryList = {categoryList}\r\n      />\r\n      {renderDeleteCategoryModal()}\r\n    </Layout>\r\n  );\r\n};\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}