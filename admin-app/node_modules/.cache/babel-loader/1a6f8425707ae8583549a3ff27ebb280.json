{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\MERN-Demo\\\\admin-app\\\\src\\\\containers\\\\Category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCategory, getAllCategory, updateCategories, deleteCategories as deleteCategoriesAction } from \"../../actions\";\nimport Layout from \"../../components/layout\";\nimport Modal from \"../../components/UI/Modal\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown, IoIosAdd, IoIosTrash, IoIosCloudUpload } from \"react-icons/io\";\nimport UpdateCategoriesModal from \"./components/UpdateCategoriesModal\";\nimport AddCategoryModal from \"./components/AddCategoriesModal\";\nimport \"./style.css\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const [categoryName, setCategoryName] = useState(\"\");\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\n  const [categoryImage, setCategoryImage] = useState(\"\");\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    if (!category.loading) {\n      setShow(false);\n    }\n  }, [category.loading]);\n\n  const handleClose = () => {\n    const form = new FormData();\n\n    if (categoryName === \"\") {\n      alert(\"Name is required\");\n      setShow(false);\n      return;\n    }\n\n    form.append(\"name\", categoryName);\n    form.append(\"parentId\", parentCategoryId);\n    form.append(\"categoryImage\", categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName(\"\");\n    setParentCategoryId(\"\");\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category of categories) {\n      myCategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return myCategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId,\n        type: category.type\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setUpdateCategoryModal(true);\n  };\n\n  const updateCheckedAndExpandedCategories = () => {\n    const categories = createCategoryList(category.categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId === category.value);\n      category && checkedArray.push(category);\n    });\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId === category.value);\n      category && expandedArray.push(category);\n    });\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n    console.log({\n      checked,\n      expanded,\n      categories,\n      checkedArray,\n      expandedArray\n    });\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type === \"checked\") {\n      const updatedCheckedArray = checkedArray.map((item, _index) => index === _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckedArray);\n    } else if (type === \"expanded\") {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index === _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    }\n  };\n\n  const updateCategoriesForm = () => {\n    const form = new FormData(); // if(name===\"\"){\n    //   alert('Category name is required')\n    //   return;\n    // }\n\n    expandedArray.forEach((item, index) => {\n      form.append(\"_id\", item.value);\n      form.append(\"name\", item.name);\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\n      form.append(\"type\", item.type);\n    });\n    checkedArray.forEach((item, index) => {\n      form.append(\"_id\", item.value);\n      form.append(\"name\", item.name);\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\n      form.append(\"type\", item.type);\n    });\n    dispatch(updateCategories(form));\n    setUpdateCategoryModal(false);\n  };\n\n  const deleteCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setDeleteCategoryModal(true);\n  };\n\n  const deleteCategories = () => {\n    const checkedIdsArray = checkedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const expandedIdsArray = expandedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\n\n    if (checkedIdsArray.length > 0) {\n      dispatch(deleteCategoriesAction(checkedIdsArray)).then(result => {\n        if (result) {\n          dispatch(getAllCategory());\n          setDeleteCategoryModal(false);\n        }\n      });\n    }\n\n    setDeleteCategoryModal(false);\n  };\n\n  const renderDeleteCategoryModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      modalTitle: \"Confirm\",\n      show: deleteCategoryModal,\n      handleClose: () => setDeleteCategoryModal(false),\n      buttons: [{\n        label: \"No\",\n        color: \"primary\",\n        onClick: () => {\n          alert(\"no\");\n        }\n      }, {\n        label: \"Yes\",\n        color: \"danger\",\n        onClick: deleteCategories\n      }],\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Checked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this);\n  };\n\n  const categoryList = createCategoryList(category.categories);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"=actionBtnContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Actions: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleShow,\n                children: [/*#__PURE__*/_jsxDEV(IoIosAdd, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: deleteCategory,\n                children: [/*#__PURE__*/_jsxDEV(IoIosTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 50\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 63\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: updateCategory,\n                children: [/*#__PURE__*/_jsxDEV(IoIosCloudUpload, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 50\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 69\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n            nodes: renderCategories(category.categories),\n            checked: checked,\n            expanded: expanded,\n            onCheck: checked => setChecked(checked),\n            onExpand: expanded => setExpanded(expanded),\n            icons: {\n              check: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 24\n              }, this),\n              uncheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 26\n              }, this),\n              halfCheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 28\n              }, this),\n              expandClose: /*#__PURE__*/_jsxDEV(IoIosArrowForward, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 30\n              }, this),\n              expandOpen: /*#__PURE__*/_jsxDEV(IoIosArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 29\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCategoryModal, {\n      show: show,\n      handleClose: () => setShow(false),\n      onSubmit: handleClose,\n      modalTitle: \"Add New Categories\",\n      categoryName: categoryName,\n      setCategoryName: setCategoryName,\n      parentCategoryId: parentCategoryId,\n      setParentCategoryId: setParentCategoryId,\n      categoryList: categoryList,\n      handleCategoryImage: handleCategoryImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateCategoriesModal, {\n      show: updateCategoryModal,\n      handleClose: () => setUpdateCategoryModal(false),\n      onSubmit: updateCategoriesForm,\n      modalTitle: \"Update Categories\",\n      size: \"lg\",\n      expandedArray: expandedArray,\n      checkedArray: checkedArray,\n      handleCategoryInput: handleCategoryInput,\n      categoryList: categoryList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), renderDeleteCategoryModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Category, \"StTuhF4ZZpVe2ZiUm8RzHd/7f5c=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/MERN-Demo/admin-app/src/containers/Category/index.js"],"names":["React","useState","Col","Container","Row","useDispatch","useSelector","addCategory","getAllCategory","updateCategories","deleteCategories","deleteCategoriesAction","Layout","Modal","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","IoIosAdd","IoIosTrash","IoIosCloudUpload","UpdateCategoriesModal","AddCategoryModal","useEffect","Category","props","category","state","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","deleteCategoryModal","setDeleteCategoryModal","dispatch","show","setShow","loading","handleClose","form","FormData","alert","append","handleShow","renderCategories","categories","myCategories","push","label","name","value","_id","children","length","createCategoryList","options","parentId","type","handleCategoryImage","e","target","files","updateCategory","updateCheckedAndExpandedCategories","forEach","categoryId","index","find","_index","console","log","handleCategoryInput","key","updatedCheckedArray","map","item","updatedExpandedArray","updateCategoriesForm","deleteCategory","checkedIdsArray","expandedIdsArray","idsArray","concat","then","result","renderDeleteCategoryModal","color","onClick","categoryList","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addCategory,\r\n  getAllCategory,\r\n  updateCategories,\r\n  deleteCategories as deleteCategoriesAction,\r\n} from \"../../actions\";\r\nimport Layout from \"../../components/layout\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\nimport {\r\n  IoIosCheckboxOutline,\r\n  IoIosCheckbox,\r\n  IoIosArrowForward,\r\n  IoIosArrowDown,\r\n  IoIosAdd,\r\n  IoIosTrash,\r\n  IoIosCloudUpload,\r\n} from \"react-icons/io\";\r\nimport UpdateCategoriesModal from \"./components/UpdateCategoriesModal\";\r\nimport AddCategoryModal from \"./components/AddCategoriesModal\";\r\nimport \"./style.css\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Category = (props) => {\r\n  const category = useSelector((state) => state.category);\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(\"\");\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [checkedArray, setCheckedArray] = useState([]);\r\n  const [expandedArray, setExpandedArray] = useState([]);\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    if(!category.loading){\r\n      setShow(false);\r\n    }\r\n  },[category.loading])\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n    if(categoryName===\"\"){\r\n      alert(\"Name is required\");\r\n      setShow(false);\r\n      return;\r\n    }\r\n    form.append(\"name\", categoryName);\r\n    form.append(\"parentId\", parentCategoryId);\r\n    form.append(\"categoryImage\", categoryImage);\r\n    dispatch(addCategory(form));\r\n    setCategoryName(\"\");\r\n    setParentCategoryId(\"\");\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category of categories) {\r\n      myCategories.push({\r\n        label: category.name,\r\n        value: category._id,\r\n        children:\r\n          category.children.length > 0 && renderCategories(category.children),\r\n      });\r\n    }\r\n    return myCategories;\r\n  };\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({\r\n        value: category._id,\r\n        name: category.name,\r\n        parentId: category.parentId,\r\n        type: category.type\r\n      });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n  const handleCategoryImage = (e) => {\r\n    setCategoryImage(e.target.files[0]);\r\n  };\r\n  const updateCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setUpdateCategoryModal(true);\r\n  };\r\n\r\n  const updateCheckedAndExpandedCategories = () => {\r\n    const categories = createCategoryList(category.categories);\r\n    const checkedArray = [];\r\n    const expandedArray = [];\r\n    checked.length > 0 &&\r\n      checked.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, _index) => categoryId === category.value\r\n        );\r\n        category && checkedArray.push(category);\r\n      });\r\n    expanded.length > 0 &&\r\n      expanded.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, _index) => categoryId === category.value\r\n        );\r\n        category && expandedArray.push(category);\r\n      });\r\n    setCheckedArray(checkedArray);\r\n    setExpandedArray(expandedArray);\r\n    console.log({ checked, expanded, categories, checkedArray, expandedArray });\r\n  };\r\n\r\n  const handleCategoryInput = (key, value, index, type) => {\r\n    if (type === \"checked\") {\r\n      const updatedCheckedArray = checkedArray.map((item, _index) =>\r\n        index === _index ? { ...item, [key]: value } : item\r\n      );\r\n      setCheckedArray(updatedCheckedArray);\r\n    } else if (type === \"expanded\") {\r\n      const updatedExpandedArray = expandedArray.map((item, _index) =>\r\n        index === _index ? { ...item, [key]: value } : item\r\n      );\r\n      setExpandedArray(updatedExpandedArray);\r\n    }\r\n  };\r\n  const updateCategoriesForm = () => {\r\n    const form = new FormData();\r\n    // if(name===\"\"){\r\n    //   alert('Category name is required')\r\n    //   return;\r\n    // }\r\n    expandedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\r\n      form.append(\"type\", item.type);\r\n    });\r\n    checkedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\r\n      form.append(\"type\", item.type);\r\n    });\r\n    dispatch(updateCategories(form));\r\n    setUpdateCategoryModal(false)\r\n  };\r\n\r\n  const deleteCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setDeleteCategoryModal(true);\r\n  };\r\n\r\n  const deleteCategories = () => {\r\n    const checkedIdsArray = checkedArray.map((item, index) => ({\r\n      _id: item.value,\r\n    }));\r\n    const expandedIdsArray = expandedArray.map((item, index) => ({\r\n      _id: item.value,\r\n    }));\r\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\r\n    if (checkedIdsArray.length > 0) {\r\n      dispatch(deleteCategoriesAction(checkedIdsArray)).then((result) => {\r\n        if (result) {\r\n          dispatch(getAllCategory());\r\n          setDeleteCategoryModal(false);\r\n        }\r\n      });\r\n    }\r\n    setDeleteCategoryModal(false);\r\n  };\r\n\r\n  const renderDeleteCategoryModal = () => {\r\n    return (\r\n      <Modal\r\n        modalTitle=\"Confirm\"\r\n        show={deleteCategoryModal}\r\n        handleClose={() => setDeleteCategoryModal(false)}\r\n        buttons={[\r\n          {\r\n            label: \"No\",\r\n            color: \"primary\",\r\n            onClick: () => {\r\n              alert(\"no\");\r\n            },\r\n          },\r\n          {\r\n            label: \"Yes\",\r\n            color: \"danger\",\r\n            onClick: deleteCategories,\r\n          },\r\n        ]}\r\n      >\r\n        <h5>Checked</h5>\r\n        {checkedArray.map((item, index) => (\r\n          <span key={index}>{item.name}</span>\r\n        ))}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const categoryList = createCategoryList(category.categories);\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Category</h3>\r\n              <div className=\"=actionBtnContainer\">\r\n                <span>Actions: </span>\r\n                <button onClick={handleShow}><IoIosAdd/><span>Add</span></button>\r\n                <button onClick={deleteCategory}><IoIosTrash/><span>Delete</span></button>\r\n                <button onClick={updateCategory}><IoIosCloudUpload/><span>Edit</span></button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            {/* <ul>{renderCategories(category.categories)}</ul> */}\r\n            <CheckboxTree\r\n              nodes={renderCategories(category.categories)}\r\n              checked={checked}\r\n              expanded={expanded}\r\n              onCheck={(checked) => setChecked(checked)}\r\n              onExpand={(expanded) => setExpanded(expanded)}\r\n              icons={{\r\n                check: <IoIosCheckbox />,\r\n                uncheck: <IoIosCheckboxOutline />,\r\n                halfCheck: <IoIosCheckboxOutline />,\r\n                expandClose: <IoIosArrowForward />,\r\n                expandOpen: <IoIosArrowDown />,\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <AddCategoryModal\r\n        show={show}\r\n        handleClose={()=>setShow(false)}\r\n        onSubmit={handleClose}\r\n        modalTitle={\"Add New Categories\"}\r\n        categoryName={categoryName}\r\n        setCategoryName={setCategoryName}\r\n        parentCategoryId={parentCategoryId}\r\n        setParentCategoryId={setParentCategoryId}\r\n        categoryList={categoryList}\r\n        handleCategoryImage={handleCategoryImage}\r\n      />\r\n      <UpdateCategoriesModal\r\n        show={updateCategoryModal}\r\n        handleClose={()=> setUpdateCategoryModal(false)}\r\n        onSubmit={updateCategoriesForm}\r\n        modalTitle={\"Update Categories\"}\r\n        size=\"lg\"\r\n        expandedArray={expandedArray}\r\n        checkedArray={checkedArray}\r\n        handleCategoryInput={handleCategoryInput}\r\n        categoryList={categoryList}\r\n      />\r\n      {renderDeleteCategoryModal()}\r\n    </Layout>\r\n  );\r\n};\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}